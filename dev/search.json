[{"path":"https://mlr3fselect.mlr-org.com/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marc Becker. Author, maintainer. Patrick Schratz. Author. Michel Lang. Author. Bernd Bischl. Author.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Becker M, Schratz P, Lang M, Bischl B (2023). mlr3fselect: Feature Selection 'mlr3'. https://mlr3fselect.mlr-org.com, https://github.com/mlr-org/mlr3fselect.","code":"@Manual{,   title = {mlr3fselect: Feature Selection for 'mlr3'},   author = {Marc Becker and Patrick Schratz and Michel Lang and Bernd Bischl},   year = {2023},   note = {https://mlr3fselect.mlr-org.com, https://github.com/mlr-org/mlr3fselect}, }"},{"path":"https://mlr3fselect.mlr-org.com/dev/index.html","id":"mlr3fselect-","dir":"","previous_headings":"","what":"Feature Selection for mlr3","title":"Feature Selection for mlr3","text":"Package website: release | dev mlr3fselect feature selection package mlr3 ecosystem. selects optimal feature set mlr3 learner. package works several optimization algorithms e.g. Random Search, Recursive Feature Elimination, Genetic Search. Moreover, can automatically optimize learners estimate performance optimized feature sets nested resampling. package built optimization framework bbotk.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Feature Selection for mlr3","text":"several section feature selection mlr3book. Getting started wrapper feature selection Estimate Model Performance nested resampling. gallery features collection case studies demos optimization. Utilize built-feature importance models Recursive Feature Elimination. Run feature selection Shadow Variable Search. Feature Selection Titanic data set. cheatsheet summarizes important functions mlr3fselect.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Feature Selection for mlr3","text":"Install last release CRAN: Install development version GitHub:","code":"install.packages(\"mlr3fselect\") remotes::install_github(\"mlr-org/mlr3fselect\")"},{"path":"https://mlr3fselect.mlr-org.com/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Feature Selection for mlr3","text":"run feature selection support vector machine Spam data set. construct instance fsi() function. instance describes optimization problem. select simple random search optimization algorithm. start feature selection, simply pass instance fselector. fselector writes best hyperparameter configuration instance. corresponding measured performance. archive contains evaluated hyperparameter configurations. fit final model optimized feature set make predictions new data.","code":"library(\"mlr3verse\")  tsk(\"spam\") ## <TaskClassif:spam> (4601 x 58): HP Spam Detection ## * Target: type ## * Properties: twoclass ## * Features (57): ##   - dbl (57): address, addresses, all, business, capitalAve, capitalLong, capitalTotal, ##     charDollar, charExclamation, charHash, charRoundbracket, charSemicolon, ##     charSquarebracket, conference, credit, cs, data, direct, edu, email, font, free, ##     george, hp, hpl, internet, lab, labs, mail, make, meeting, money, num000, num1999, ##     num3d, num415, num650, num85, num857, order, original, our, over, parts, people, pm, ##     project, re, receive, remove, report, table, technology, telnet, will, you, your instance = fsi(   task = tsk(\"spam\"),   learner = lrn(\"classif.svm\", type = \"C-classification\"),   resampling = rsmp(\"cv\", folds = 3),   measures = msr(\"classif.ce\"),   terminator = trm(\"evals\", n_evals = 20) ) instance ## <FSelectInstanceSingleCrit> ## * State:  Not optimized ## * Objective: <ObjectiveFSelect:classif.svm_on_spam> ## * Terminator: <TerminatorEvals> fselector = fs(\"random_search\", batch_size = 5) fselector ## <FSelectorRandomSearch>: Random Search ## * Parameters: batch_size=5 ## * Properties: single-crit, multi-crit ## * Packages: mlr3fselect fselector$optimize(instance) instance$result_feature_set ##  [1] \"address\"           \"addresses\"         \"all\"               \"business\"          ##  [5] \"capitalAve\"        \"capitalLong\"       \"capitalTotal\"      \"charDollar\"        ##  [9] \"charExclamation\"   \"charHash\"          \"charRoundbracket\"  \"charSemicolon\"     ## [13] \"charSquarebracket\" \"conference\"        \"credit\"            \"cs\"                ## [17] \"data\"              \"direct\"            \"edu\"               \"email\"             ## [21] \"font\"              \"free\"              \"george\"            \"hp\"                ## [25] \"internet\"          \"lab\"               \"labs\"              \"mail\"              ## [29] \"make\"              \"meeting\"           \"money\"             \"num000\"            ## [33] \"num1999\"           \"num3d\"             \"num415\"            \"num650\"            ## [37] \"num85\"             \"num857\"            \"order\"             \"our\"               ## [41] \"parts\"             \"people\"            \"pm\"                \"project\"           ## [45] \"re\"                \"receive\"           \"remove\"            \"report\"            ## [49] \"table\"             \"technology\"        \"telnet\"            \"will\"              ## [53] \"you\"               \"your\" instance$result_y ## classif.ce  ## 0.07042005 as.data.table(instance$archive) ##     address addresses   all business capitalAve capitalLong capitalTotal charDollar charExclamation ##  1:    TRUE      TRUE  TRUE     TRUE       TRUE        TRUE         TRUE       TRUE            TRUE ##  2:    TRUE      TRUE  TRUE    FALSE      FALSE        TRUE         TRUE       TRUE            TRUE ##  3:    TRUE      TRUE FALSE    FALSE       TRUE        TRUE         TRUE       TRUE            TRUE ##  4:    TRUE      TRUE  TRUE     TRUE       TRUE        TRUE         TRUE       TRUE            TRUE ##  5:   FALSE     FALSE FALSE    FALSE      FALSE       FALSE        FALSE       TRUE           FALSE ## ---                                                                                                 ## 16:   FALSE     FALSE FALSE    FALSE      FALSE       FALSE        FALSE      FALSE           FALSE ## 17:   FALSE     FALSE FALSE     TRUE       TRUE        TRUE        FALSE      FALSE            TRUE ## 18:   FALSE     FALSE  TRUE     TRUE      FALSE       FALSE        FALSE       TRUE           FALSE ## 19:    TRUE      TRUE  TRUE     TRUE      FALSE        TRUE         TRUE       TRUE            TRUE ## 20:    TRUE     FALSE  TRUE    FALSE      FALSE        TRUE        FALSE       TRUE           FALSE ## 56 variables not shown: [charHash, charRoundbracket, charSemicolon, charSquarebracket, conference, credit, cs, data, direct, edu, ...] task = tsk(\"spam\") learner = lrn(\"classif.svm\", type = \"C-classification\")  task$select(instance$result_feature_set) learner$train(task)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"ArchiveFSelect stores evaluated feature sets performance scores.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"ArchiveFSelect container around data.table::data.table(). row corresponds single evaluation feature set. See section Data Structure information. archive stores additionally mlr3::BenchmarkResult ($benchmark_result) records resampling experiments. experiment corresponds single evaluation feature set. table ($data) benchmark result ($benchmark_result) linked uhash column. archive passed .data.table(), joined automatically.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"data-structure","dir":"Reference","previous_headings":"","what":"Data structure","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"table ($data) following columns: One column feature task ($search_space). One column performance measure ($codomain). runtime_learners (numeric(1)) Sum training predict times logged learners per mlr3::ResampleResult / evaluation. include potential overhead time. timestamp (POSIXct) Time stamp evaluation logged archive. batch_nr (integer(1)) Feature sets evaluated batches. batch unique batch number. uhash (character(1)) Connects feature set resampling experiment stored mlr3::BenchmarkResult.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"analysis","dir":"Reference","previous_headings":"","what":"Analysis","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"analyzing feature selection results, recommended pass archive .data.table(). returned data table joined benchmark result adds mlr3::ResampleResult feature set. archive provides various getters (e.g. $learners()) ease access. getters extract position () unique hash (uhash). complete list getters see methods section. benchmark result ($benchmark_result) allows score feature sets different measure. Alternatively, measures can supplied .data.table().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 Methods","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":".data.table.ArchiveFSelect(x, exclude_columns = \"uhash\", measures = NULL) Returns tabular view evaluated feature sets. ArchiveFSelect -> data.table::data.table() x (ArchiveFSelect) exclude_columns (character()) Exclude columns table. Set NULL column excluded. measures (list mlr3::Measure) Score feature sets additional measures.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"bbotk::Archive -> ArchiveFSelect","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"benchmark_result (mlr3::BenchmarkResult) Benchmark result.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"bbotk::Archive$add_evals() bbotk::Archive$best() bbotk::Archive$clear() bbotk::Archive$format() bbotk::Archive$nds_selection()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"ArchiveFSelect$new() ArchiveFSelect$learner() ArchiveFSelect$learners() ArchiveFSelect$predictions() ArchiveFSelect$resample_result() ArchiveFSelect$print() ArchiveFSelect$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"","code":"ArchiveFSelect$new(search_space, codomain, check_values = TRUE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"search_space (paradox::ParamSet) Search space. Internally created provided mlr3::Task instance. codomain (bbotk::Codomain) Specifies codomain objective function .e. set performance measures. Internally created provided mlr3::Measures instance. check_values (logical(1)) TRUE (default), hyperparameter configurations check validity.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"method-learner-","dir":"Reference","previous_headings":"","what":"Method learner()","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"Retrieve mlr3::Learner -th evaluation, position unique hash uhash. uhash mutually exclusive. Learner contain model. Use $learners() get learners models.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"","code":"ArchiveFSelect$learner(i = NULL, uhash = NULL)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"(integer(1)) iteration value filter . uhash (logical(1)) uhash value filter .","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"method-learners-","dir":"Reference","previous_headings":"","what":"Method learners()","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"Retrieve list trained mlr3::Learner objects -th evaluation, position unique hash uhash. uhash mutually exclusive.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"","code":"ArchiveFSelect$learners(i = NULL, uhash = NULL)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"(integer(1)) iteration value filter . uhash (logical(1)) uhash value filter .","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"method-predictions-","dir":"Reference","previous_headings":"","what":"Method predictions()","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"Retrieve list mlr3::Prediction objects -th evaluation, position unique hash uhash. uhash mutually exclusive.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"","code":"ArchiveFSelect$predictions(i = NULL, uhash = NULL)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"(integer(1)) iteration value filter . uhash (logical(1)) uhash value filter .","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"method-resample-result-","dir":"Reference","previous_headings":"","what":"Method resample_result()","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"Retrieve mlr3::ResampleResult -th evaluation, position unique hash uhash. uhash mutually exclusive.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"","code":"ArchiveFSelect$resample_result(i = NULL, uhash = NULL)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"(integer(1)) iteration value filter . uhash (logical(1)) uhash value filter .","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"Printer.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"","code":"ArchiveFSelect$print()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"... (ignored).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"","code":"ArchiveFSelect$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ArchiveFSelect.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Logging Evaluated Feature Sets — ArchiveFSelect","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Automatic Feature Selection — AutoFSelector","title":"Class for Automatic Feature Selection — AutoFSelector","text":"AutoFSelector wraps mlr3::Learner augments automatic feature selection. auto_fselector() function creates AutoFSelector object.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Automatic Feature Selection — AutoFSelector","text":"AutoFSelector mlr3::Learner wraps another mlr3::Learner performs following steps $train(): wrapped (inner) learner trained feature subsets via resampling. feature selection can specified providing FSelector, bbotk::Terminator, mlr3::Resampling mlr3::Measure. final model fit complete training data best-found feature subset. $predict() AutoFSelector just calls predict method wrapped (inner) learner.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"resources","dir":"Reference","previous_headings":"","what":"Resources","title":"Class for Automatic Feature Selection — AutoFSelector","text":"several sections feature selection mlr3book. Estimate Model Performance nested resampling (Tuning workflow transferable feature selection). Automate feature selection. gallery features collection case studies demos optimization.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"nested-resampling","dir":"Reference","previous_headings":"","what":"Nested Resampling","title":"Class for Automatic Feature Selection — AutoFSelector","text":"Nested resampling can performed passing AutoFSelector object mlr3::resample() mlr3::benchmark(). access inner resampling results, set store_fselect_instance = TRUE execute mlr3::resample() mlr3::benchmark() store_models = TRUE (see examples). mlr3::Resampling passed AutoFSelector meant inner resampling, operating training set arbitrary outer resampling. reason feasible pass instantiated mlr3::Resampling .","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Class for Automatic Feature Selection — AutoFSelector","text":"mlr3::Learner -> AutoFSelector","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class for Automatic Feature Selection — AutoFSelector","text":"instance_args (list()) arguments construction create FSelectInstanceSingleCrit. fselector (FSelector) Optimization algorithm.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Class for Automatic Feature Selection — AutoFSelector","text":"archive ([ArchiveFSelect) Returns FSelectInstanceSingleCrit archive. learner (mlr3::Learner) Trained learner. fselect_instance (FSelectInstanceSingleCrit) Internally created feature selection instance intermediate results. fselect_result (data.table::data.table) Short-cut $result FSelectInstanceSingleCrit. predict_type (character(1)) Stores currently active predict type, e.g. \"response\". Must element $predict_types. hash (character(1)) Hash (unique identifier) object.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for Automatic Feature Selection — AutoFSelector","text":"mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for Automatic Feature Selection — AutoFSelector","text":"AutoFSelector$new() AutoFSelector$base_learner() AutoFSelector$importance() AutoFSelector$selected_features() AutoFSelector$oob_error() AutoFSelector$loglik() AutoFSelector$print() AutoFSelector$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for Automatic Feature Selection — AutoFSelector","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Automatic Feature Selection — AutoFSelector","text":"","code":"AutoFSelector$new(   fselector,   learner,   resampling,   measure = NULL,   terminator,   store_fselect_instance = TRUE,   store_benchmark_result = TRUE,   store_models = FALSE,   check_values = FALSE,   callbacks = list() )"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Automatic Feature Selection — AutoFSelector","text":"fselector (FSelector) Optimization algorithm. learner (mlr3::Learner) Learner optimize feature subset . resampling (mlr3::Resampling) Resampling used evaluated performance feature subsets. Uninstantiated resamplings instantiated construction feature subsets evaluated data splits. Already instantiated resamplings kept unchanged. measure (mlr3::Measure) Measure optimize. NULL, default measure used. terminator (Terminator) Stop criterion feature selection. store_fselect_instance (logical(1)) TRUE (default), stores internally created FSelectInstanceSingleCrit intermediate results slot $fselect_instance. set TRUE, store_models = TRUE store_benchmark_result (logical(1)) Store benchmark result archive? store_models (logical(1)). Store models benchmark result? check_values (logical(1)) Check parameters evaluation results validity? callbacks (list CallbackFSelect) List callbacks.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"method-base-learner-","dir":"Reference","previous_headings":"","what":"Method base_learner()","title":"Class for Automatic Feature Selection — AutoFSelector","text":"Extracts base learner nested learner objects like GraphLearner mlr3pipelines. recursive = 0, (tuned) learner returned.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Automatic Feature Selection — AutoFSelector","text":"","code":"AutoFSelector$base_learner(recursive = Inf)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Automatic Feature Selection — AutoFSelector","text":"recursive (integer(1)) Depth recursion multiple nested objects.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for Automatic Feature Selection — AutoFSelector","text":"Learner.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Class for Automatic Feature Selection — AutoFSelector","text":"importance scores final model.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Automatic Feature Selection — AutoFSelector","text":"","code":"AutoFSelector$importance()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for Automatic Feature Selection — AutoFSelector","text":"Named numeric().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"Class for Automatic Feature Selection — AutoFSelector","text":"selected features final model. features selected internally learner.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Automatic Feature Selection — AutoFSelector","text":"","code":"AutoFSelector$selected_features()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for Automatic Feature Selection — AutoFSelector","text":"character().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"method-oob-error-","dir":"Reference","previous_headings":"","what":"Method oob_error()","title":"Class for Automatic Feature Selection — AutoFSelector","text":"--bag error final model.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Automatic Feature Selection — AutoFSelector","text":"","code":"AutoFSelector$oob_error()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for Automatic Feature Selection — AutoFSelector","text":"numeric(1).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"method-loglik-","dir":"Reference","previous_headings":"","what":"Method loglik()","title":"Class for Automatic Feature Selection — AutoFSelector","text":"log-likelihood final model.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Automatic Feature Selection — AutoFSelector","text":"","code":"AutoFSelector$loglik()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for Automatic Feature Selection — AutoFSelector","text":"logLik. Printer.","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Automatic Feature Selection — AutoFSelector","text":"","code":"AutoFSelector$print()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Automatic Feature Selection — AutoFSelector","text":"... (ignored).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for Automatic Feature Selection — AutoFSelector","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Automatic Feature Selection — AutoFSelector","text":"","code":"AutoFSelector$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Automatic Feature Selection — AutoFSelector","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/AutoFSelector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for Automatic Feature Selection — AutoFSelector","text":"","code":"# Automatic Feature Selection # \\donttest{  # split to train and external set task = tsk(\"penguins\") split = partition(task, ratio = 0.8)  # create auto fselector afs = auto_fselector(   fselector = fs(\"random_search\"),   learner = lrn(\"classif.rpart\"),   resampling = rsmp (\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 4)  # optimize feature subset and fit final model afs$train(task, row_ids = split$train)  # predict with final model afs$predict(task, row_ids = split$test) #> <PredictionClassif> for 69 observations: #>     row_ids     truth  response #>           2    Adelie    Adelie #>           5    Adelie    Adelie #>           9    Adelie    Adelie #> ---                             #>         334 Chinstrap Chinstrap #>         336 Chinstrap Chinstrap #>         339 Chinstrap Chinstrap  # show result afs$fselect_result #>    bill_depth bill_length body_mass flipper_length island  sex year #> 1:       TRUE        TRUE      TRUE           TRUE   TRUE TRUE TRUE #>                                                          features classif.ce #> 1: bill_depth,bill_length,body_mass,flipper_length,island,sex,... 0.07608696  # model slot contains trained learner and fselect instance afs$model #> $learner #> <LearnerClassifRpart:classif.rpart>: Classification Tree #> * Model: rpart #> * Parameters: xval=0 #> * Packages: mlr3, rpart #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, factor, ordered #> * Properties: importance, missings, multiclass, selected_features, #>   twoclass, weights #>  #> $features #> [1] \"bill_depth\"     \"bill_length\"    \"body_mass\"      \"flipper_length\" #> [5] \"island\"         \"sex\"            \"year\"           #>  #> $fselect_instance #> <FSelectInstanceSingleCrit> #> * State:  Optimized #> * Objective: <ObjectiveFSelect:classif.rpart_on_penguins> #> * Terminator: <TerminatorEvals> #> * Result: #>    bill_depth bill_length body_mass flipper_length island  sex year classif.ce #> 1:       TRUE        TRUE      TRUE           TRUE   TRUE TRUE TRUE 0.07608696 #> * Archive: #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #> 2:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE  TRUE #> 3:       TRUE       FALSE      TRUE           TRUE   TRUE FALSE FALSE #> 4:      FALSE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #>    classif.ce #> 1: 0.07608696 #> 2: 0.07608696 #> 3: 0.13043478 #> 4: 0.27173913 #>   # shortcut trained learner afs$learner #> <LearnerClassifRpart:classif.rpart>: Classification Tree #> * Model: rpart #> * Parameters: xval=0 #> * Packages: mlr3, rpart #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, factor, ordered #> * Properties: importance, missings, multiclass, selected_features, #>   twoclass, weights  # shortcut fselect instance afs$fselect_instance #> <FSelectInstanceSingleCrit> #> * State:  Optimized #> * Objective: <ObjectiveFSelect:classif.rpart_on_penguins> #> * Terminator: <TerminatorEvals> #> * Result: #>    bill_depth bill_length body_mass flipper_length island  sex year classif.ce #> 1:       TRUE        TRUE      TRUE           TRUE   TRUE TRUE TRUE 0.07608696 #> * Archive: #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #> 2:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE  TRUE #> 3:       TRUE       FALSE      TRUE           TRUE   TRUE FALSE FALSE #> 4:      FALSE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #>    classif.ce #> 1: 0.07608696 #> 2: 0.07608696 #> 3: 0.13043478 #> 4: 0.27173913   # Nested Resampling  afs = auto_fselector(   fselector = fs(\"random_search\"),   learner = lrn(\"classif.rpart\"),   resampling = rsmp (\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 4)  resampling_outer = rsmp(\"cv\", folds = 3) rr = resample(task, afs, resampling_outer, store_models = TRUE)  # retrieve inner feature selection results. extract_inner_fselect_results(rr) #>    iteration bill_depth bill_length body_mass flipper_length island   sex  year #> 1:         1       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE  TRUE #> 2:         2       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE FALSE #> 3:         3       TRUE        TRUE     FALSE           TRUE   TRUE FALSE FALSE #>    classif.ce                                         features  task_id #> 1: 0.03947368 bill_depth,bill_length,body_mass,island,sex,year penguins #> 2: 0.05263158      bill_depth,bill_length,body_mass,island,sex penguins #> 3: 0.09090909     bill_depth,bill_length,flipper_length,island penguins #>                 learner_id resampling_id #> 1: classif.rpart.fselector            cv #> 2: classif.rpart.fselector            cv #> 3: classif.rpart.fselector            cv  # performance scores estimated on the outer resampling rr$score() #>                 task  task_id             learner              learner_id #> 1: <TaskClassif[50]> penguins <AutoFSelector[46]> classif.rpart.fselector #> 2: <TaskClassif[50]> penguins <AutoFSelector[46]> classif.rpart.fselector #> 3: <TaskClassif[50]> penguins <AutoFSelector[46]> classif.rpart.fselector #>            resampling resampling_id iteration              prediction #> 1: <ResamplingCV[20]>            cv         1 <PredictionClassif[20]> #> 2: <ResamplingCV[20]>            cv         2 <PredictionClassif[20]> #> 3: <ResamplingCV[20]>            cv         3 <PredictionClassif[20]> #>    classif.ce #> 1: 0.02608696 #> 2: 0.06086957 #> 3: 0.06140351  # unbiased performance of the final model trained on the full data set rr$aggregate() #> classif.ce  #> 0.04945334  # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/CallbackFSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Feature Selection Callback — CallbackFSelect","title":"Create Feature Selection Callback — CallbackFSelect","text":"Specialized bbotk::CallbackOptimization feature selection. Callbacks allow customizing behavior processes mlr3fselect. callback_fselect() function creates CallbackFSelect. Predefined callbacks stored dictionary mlr_callbacks can retrieved clbk(). information callbacks see callback_fselect().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/CallbackFSelect.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Create Feature Selection Callback — CallbackFSelect","text":"mlr3misc::Callback -> bbotk::CallbackOptimization -> CallbackFSelect","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/CallbackFSelect.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Create Feature Selection Callback — CallbackFSelect","text":"on_eval_after_design (function()) Stage called design created. Called ObjectiveFSelect$eval_many(). on_eval_after_benchmark (function()) Stage called feature sets evaluated. Called ObjectiveFSelect$eval_many(). on_eval_before_archive (function()) Stage called performance values written archive. Called ObjectiveFSelect$eval_many().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/CallbackFSelect.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Create Feature Selection Callback — CallbackFSelect","text":"mlr3misc::Callback$call() mlr3misc::Callback$format() mlr3misc::Callback$help() mlr3misc::Callback$initialize() mlr3misc::Callback$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/CallbackFSelect.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Create Feature Selection Callback — CallbackFSelect","text":"CallbackFSelect$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/CallbackFSelect.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Create Feature Selection Callback — CallbackFSelect","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/CallbackFSelect.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Feature Selection Callback — CallbackFSelect","text":"","code":"CallbackFSelect$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/CallbackFSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Feature Selection Callback — CallbackFSelect","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/CallbackFSelect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Feature Selection Callback — CallbackFSelect","text":"","code":"# Write archive to disk callback_fselect(\"mlr3fselect.backup\",   on_optimization_end = function(callback, context) {     saveRDS(context$instance$archive, \"archive.rds\")   } ) #> <CallbackFSelect:mlr3fselect.backup> #> * Active Stages: on_optimization_end"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation Context — ContextEval","title":"Evaluation Context — ContextEval","text":"ContextEval allows CallbackFSelects access modify data batch feature sets evaluated. See section active bindings list modifiable objects. See callback_fselect() list stages access ContextEval.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluation Context — ContextEval","text":"context re-created time new batch feature sets evaluated. Changes $objective_fselect, $design $benchmark_result discarded function finished. Modification data table $aggregated_performance written archive. number columns can added.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Evaluation Context — ContextEval","text":"mlr3misc::Context -> ContextEval","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Evaluation Context — ContextEval","text":"objective_fselect ObjectiveFSelect.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Evaluation Context — ContextEval","text":"xss (list()) feature sets latest batch. design (data.table::data.table) benchmark design latest batch. benchmark_result (mlr3::BenchmarkResult) benchmark result latest batch. aggregated_performance (data.table::data.table) Aggregated performance scores training time latest batch. data table passed archive. callback can add additional columns also written archive.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Evaluation Context — ContextEval","text":"mlr3misc::Context$format() mlr3misc::Context$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Evaluation Context — ContextEval","text":"ContextEval$new() ContextEval$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Evaluation Context — ContextEval","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation Context — ContextEval","text":"","code":"ContextEval$new(objective_fselect)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation Context — ContextEval","text":"objective_fselect ObjectiveFSelect. id (character(1)) Identifier new callback.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Evaluation Context — ContextEval","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation Context — ContextEval","text":"","code":"ContextEval$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ContextEval.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation Context — ContextEval","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"FSelectInstanceMultiCrit specifies feature selection problem FSelectors. function fsi() creates FSelectInstanceMultiCrit function fselect() creates instance internally.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"resources","dir":"Reference","previous_headings":"","what":"Resources","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"several sections feature selection mlr3book. Learn multi-objective optimization (Tuning workflow transferable feature selection). gallery features collection case studies demos optimization.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"analysis","dir":"Reference","previous_headings":"","what":"Analysis","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"analyzing feature selection results, recommended pass archive .data.table(). returned data table joined benchmark result adds mlr3::ResampleResult feature set. archive provides various getters (e.g. $learners()) ease access. getters extract position () unique hash (uhash). complete list getters see methods section. benchmark result ($benchmark_result) allows score feature sets different measure. Alternatively, measures can supplied .data.table().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"bbotk::OptimInstance -> bbotk::OptimInstanceMultiCrit -> FSelectInstanceMultiCrit","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"result_feature_set (list character()) Feature sets task subsetting.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"bbotk::OptimInstance$clear() bbotk::OptimInstance$eval_batch() bbotk::OptimInstance$format() bbotk::OptimInstance$objective_function()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"FSelectInstanceMultiCrit$new() FSelectInstanceMultiCrit$assign_result() FSelectInstanceMultiCrit$print() FSelectInstanceMultiCrit$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"","code":"FSelectInstanceMultiCrit$new(   task,   learner,   resampling,   measures,   terminator,   store_benchmark_result = TRUE,   store_models = FALSE,   check_values = FALSE,   callbacks = list() )"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"task (mlr3::Task) Task operate . learner (mlr3::Learner) Learner optimize feature subset . resampling (mlr3::Resampling) Resampling used evaluated performance feature subsets. Uninstantiated resamplings instantiated construction feature subsets evaluated data splits. Already instantiated resamplings kept unchanged. measures (list mlr3::Measure) Measures optimize. NULL, mlr3's default measure used. terminator (Terminator) Stop criterion feature selection. store_benchmark_result (logical(1)) Store benchmark result archive? store_models (logical(1)). Store models benchmark result? check_values (logical(1)) Check parameters evaluation results validity? callbacks (list CallbackFSelect) List callbacks.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"method-assign-result-","dir":"Reference","previous_headings":"","what":"Method assign_result()","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"FSelector object writes best found feature subsets estimated performance values . internal use.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"","code":"FSelectInstanceMultiCrit$assign_result(xdt, ydt)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"xdt (data.table::data.table()) x values data.table. row one point. Contains value search space FSelectInstanceMultiCrit object. Can contain additional columns extra information. ydt (data.table::data.table()) Optimal outcomes, e.g. Pareto front.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"Printer.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"","code":"FSelectInstanceMultiCrit$print(...)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"... (ignored).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"","code":"FSelectInstanceMultiCrit$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceMultiCrit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for Multi Criteria Feature Selection — FSelectInstanceMultiCrit","text":"","code":"# Feature selection on Palmer Penguins data set # \\donttest{  task = tsk(\"penguins\")  # Construct feature selection instance instance = fsi(   task = task,   learner = lrn(\"classif.rpart\"),   resampling = rsmp(\"cv\", folds = 3),   measures = msrs(c(\"classif.ce\", \"time_train\")),   terminator = trm(\"evals\", n_evals = 4) )  # Choose optimization algorithm fselector = fs(\"random_search\", batch_size = 2)  # Run feature selection fselector$optimize(instance) #>    bill_depth bill_length body_mass flipper_length island  sex  year #> 1:       TRUE       FALSE     FALSE           TRUE   TRUE TRUE FALSE #> 2:       TRUE       FALSE     FALSE           TRUE   TRUE TRUE  TRUE #> 3:      FALSE        TRUE     FALSE          FALSE   TRUE TRUE  TRUE #>                                     features classif.ce  time_train #> 1:      bill_depth,flipper_length,island,sex 0.15997966 0.005333333 #> 2: bill_depth,flipper_length,island,sex,year 0.15128401 0.005666667 #> 3:               bill_length,island,sex,year 0.06397152 0.006666667  # Optimal feature sets instance$result_feature_set #> [[1]] #> [1] \"bill_depth\"     \"flipper_length\" \"island\"         \"sex\"            #>  #> [[2]] #> [1] \"bill_depth\"     \"flipper_length\" \"island\"         \"sex\"            #> [5] \"year\"           #>  #> [[3]] #> [1] \"bill_length\" \"island\"      \"sex\"         \"year\"        #>   # Inspect all evaluated sets as.data.table(instance$archive) #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:       TRUE       FALSE     FALSE           TRUE   TRUE  TRUE FALSE #> 2:       TRUE       FALSE     FALSE           TRUE   TRUE  TRUE  TRUE #> 3:      FALSE        TRUE     FALSE          FALSE   TRUE  TRUE  TRUE #> 4:       TRUE       FALSE      TRUE           TRUE   TRUE FALSE FALSE #>    classif.ce  time_train runtime_learners           timestamp batch_nr #> 1: 0.15997966 0.005333333            0.032 2023-03-02 10:46:52        1 #> 2: 0.15128401 0.005666667            0.032 2023-03-02 10:46:52        1 #> 3: 0.06397152 0.006666667            0.036 2023-03-02 10:46:52        2 #> 4: 0.16290364 0.006000000            0.031 2023-03-02 10:46:52        2 #>    warnings errors                                   features #> 1:        0      0       bill_depth,flipper_length,island,sex #> 2:        0      0  bill_depth,flipper_length,island,sex,year #> 3:        0      0                bill_length,island,sex,year #> 4:        0      0 bill_depth,body_mass,flipper_length,island #>         resample_result #> 1: <ResampleResult[21]> #> 2: <ResampleResult[21]> #> 3: <ResampleResult[21]> #> 4: <ResampleResult[21]> # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"FSelectInstanceSingleCrit specifies feature selection problem FSelectors. function fsi() creates FSelectInstanceSingleCrit function fselect() creates instance internally. instance contains ObjectiveFSelect object encodes black box objective function FSelector optimize. instance allows basic operations querying objective design points ($eval_batch()). operation usually done FSelector. Evaluations feature subsets performed batches calling mlr3::benchmark() internally. evaluated feature subsets stored Archive ($archive). batch evaluated, bbotk::Terminator queried remaining budget. available budget exhausted, exception raised, evaluations can performed point . FSelector also supposed store final result, consisting selected feature subset associated estimated performance values, calling method instance$assign_result().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"default-measures","dir":"Reference","previous_headings":"","what":"Default Measures","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"measure passed, default measure used. default measure depends task type.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"resources","dir":"Reference","previous_headings":"","what":"Resources","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"several sections feature selection mlr3book. Getting started wrapper feature selection. gallery features collection case studies demos optimization. Utilize built-feature importance models Recursive Feature Elimination. Run feature selection Shadow Variable Search. Feature Selection Titanic data set.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"analysis","dir":"Reference","previous_headings":"","what":"Analysis","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"analyzing feature selection results, recommended pass archive .data.table(). returned data table joined benchmark result adds mlr3::ResampleResult feature set. archive provides various getters (e.g. $learners()) ease access. getters extract position () unique hash (uhash). complete list getters see methods section. benchmark result ($benchmark_result) allows score feature sets different measure. Alternatively, measures can supplied .data.table().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"bbotk::OptimInstance -> bbotk::OptimInstanceSingleCrit -> FSelectInstanceSingleCrit","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"result_feature_set (character()) Feature set task subsetting.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"bbotk::OptimInstance$clear() bbotk::OptimInstance$eval_batch() bbotk::OptimInstance$format() bbotk::OptimInstance$objective_function()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"FSelectInstanceSingleCrit$new() FSelectInstanceSingleCrit$assign_result() FSelectInstanceSingleCrit$print() FSelectInstanceSingleCrit$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"","code":"FSelectInstanceSingleCrit$new(   task,   learner,   resampling,   measure,   terminator,   store_benchmark_result = TRUE,   store_models = FALSE,   check_values = FALSE,   callbacks = list() )"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"task (mlr3::Task) Task operate . learner (mlr3::Learner) Learner optimize feature subset . resampling (mlr3::Resampling) Resampling used evaluated performance feature subsets. Uninstantiated resamplings instantiated construction feature subsets evaluated data splits. Already instantiated resamplings kept unchanged. measure (mlr3::Measure) Measure optimize. NULL, default measure used. terminator (Terminator) Stop criterion feature selection. store_benchmark_result (logical(1)) Store benchmark result archive? store_models (logical(1)). Store models benchmark result? check_values (logical(1)) Check parameters evaluation results validity? callbacks (list CallbackFSelect) List callbacks.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"method-assign-result-","dir":"Reference","previous_headings":"","what":"Method assign_result()","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"FSelector writes best found feature subset estimated performance value . internal use.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"","code":"FSelectInstanceSingleCrit$assign_result(xdt, y)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"xdt (data.table::data.table()) x values data.table. row one point. Contains value search space FSelectInstanceMultiCrit object. Can contain additional columns extra information. y (numeric(1)) Optimal outcome.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"Printer.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"","code":"FSelectInstanceSingleCrit$print(...)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"... (ignored).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"","code":"FSelectInstanceSingleCrit$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectInstanceSingleCrit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for Single Criterion Feature Selection — FSelectInstanceSingleCrit","text":"","code":"# Feature selection on Palmer Penguins data set # \\donttest{  task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")  # Construct feature selection instance instance = fsi(   task = task,   learner = learner,   resampling = rsmp(\"cv\", folds = 3),   measures = msr(\"classif.ce\"),   terminator = trm(\"evals\", n_evals = 4) )  # Choose optimization algorithm fselector = fs(\"random_search\", batch_size = 2)  # Run feature selection fselector$optimize(instance) #>    bill_depth bill_length body_mass flipper_length island  sex year #> 1:      FALSE        TRUE      TRUE           TRUE  FALSE TRUE TRUE #>                                         features classif.ce #> 1: bill_length,body_mass,flipper_length,sex,year 0.06094584  # Subset task to optimal feature set task$select(instance$result_feature_set)  # Train the learner with optimal feature set on the full data set learner$train(task)  # Inspect all evaluated sets as.data.table(instance$archive) #>    bill_depth bill_length body_mass flipper_length island  sex  year classif.ce #> 1:       TRUE       FALSE      TRUE           TRUE   TRUE TRUE FALSE 0.17729469 #> 2:      FALSE        TRUE      TRUE           TRUE  FALSE TRUE  TRUE 0.06094584 #> 3:       TRUE       FALSE      TRUE          FALSE  FALSE TRUE  TRUE 0.24726672 #> 4:       TRUE        TRUE     FALSE          FALSE  FALSE TRUE FALSE 0.08721078 #>    runtime_learners           timestamp batch_nr warnings errors #> 1:            0.030 2023-03-02 10:46:53        1        0      0 #> 2:            0.031 2023-03-02 10:46:53        1        0      0 #> 3:            0.030 2023-03-02 10:46:53        2        0      0 #> 4:            0.032 2023-03-02 10:46:53        2        0      0 #>                                          features      resample_result #> 1: bill_depth,body_mass,flipper_length,island,sex <ResampleResult[21]> #> 2:  bill_length,body_mass,flipper_length,sex,year <ResampleResult[21]> #> 3:                  bill_depth,body_mass,sex,year <ResampleResult[21]> #> 4:                     bill_depth,bill_length,sex <ResampleResult[21]> # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Feature Selection Algorithms — FSelector","title":"Class for Feature Selection Algorithms — FSelector","text":"FSelector implements optimization algorithm.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Feature Selection Algorithms — FSelector","text":"FSelector abstract base class implements base functionality fselector must provide. subclass implemented following way: Inherit FSelector. Specify private abstract method $.optimize() use call optimizer. need call instance$eval_batch() evaluate design points. batch evaluation requested FSelectInstanceSingleCrit/FSelectInstanceMultiCrit object instance, batch possibly executed parallel via mlr3::benchmark(), evaluations stored inside instance$archive. batch evaluation, bbotk::Terminator checked, positive, exception class \"terminated_error\" generated. latter case current batch evaluations still stored instance, numeric scores sent back handling optimizer lost execution control. exception caught select best set instance$archive return . Note therefore points specified bbotk::Terminator may evaluated, Terminator checked batch evaluation, -evaluation batch. many depends setting batch size. Overwrite private super-method .assign_result() want decide estimate final set instance estimated performance. default behavior : pick best resample experiment, regarding given measure, assign set aggregated performance instance.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"private-methods","dir":"Reference","previous_headings":"","what":"Private Methods","title":"Class for Feature Selection Algorithms — FSelector","text":".optimize(instance) -> NULL Abstract base method. Implement specify feature selection subclass. See technical details sections. .assign_result(instance) -> NULL Abstract base method. Implement specify final feature subset selected. See technical details sections.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"resources","dir":"Reference","previous_headings":"","what":"Resources","title":"Class for Feature Selection Algorithms — FSelector","text":"several sections feature selection mlr3book. Learn fselectors. gallery features collection case studies demos optimization. Utilize built-feature importance models Recursive Feature Elimination. Run feature selection Shadow Variable Search.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class for Feature Selection Algorithms — FSelector","text":"id (character(1)) Identifier object. Used tables, plot text output.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Class for Feature Selection Algorithms — FSelector","text":"param_set paradox::ParamSet Set control parameters. properties (character()) Set properties fselector. Must subset mlr_reflections$fselect_properties. packages (character()) Set required packages. Note packages loaded via requireNamespace(), attached. label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for Feature Selection Algorithms — FSelector","text":"FSelector$new() FSelector$format() FSelector$print() FSelector$help() FSelector$optimize() FSelector$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for Feature Selection Algorithms — FSelector","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Feature Selection Algorithms — FSelector","text":"","code":"FSelector$new(   id = \"fselector\",   param_set,   properties,   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Feature Selection Algorithms — FSelector","text":"id (character(1)) Identifier new instance. param_set paradox::ParamSet Set control parameters. properties (character()) Set properties fselector. Must subset mlr_reflections$fselect_properties. packages (character()) Set required packages. Note packages loaded via requireNamespace(), attached. label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Class for Feature Selection Algorithms — FSelector","text":"Helper print outputs.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Feature Selection Algorithms — FSelector","text":"","code":"FSelector$format(...)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Feature Selection Algorithms — FSelector","text":"... (ignored).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for Feature Selection Algorithms — FSelector","text":"(character()).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Class for Feature Selection Algorithms — FSelector","text":"Print method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Feature Selection Algorithms — FSelector","text":"","code":"FSelector$print()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for Feature Selection Algorithms — FSelector","text":"(character()).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Class for Feature Selection Algorithms — FSelector","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Feature Selection Algorithms — FSelector","text":"","code":"FSelector$help()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"method-optimize-","dir":"Reference","previous_headings":"","what":"Method optimize()","title":"Class for Feature Selection Algorithms — FSelector","text":"Performs feature selection FSelectInstanceSingleCrit FSelectInstanceMultiCrit termination. single evaluations written ArchiveFSelect resides FSelectInstanceSingleCrit / FSelectInstanceMultiCrit. result written instance object.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Feature Selection Algorithms — FSelector","text":"","code":"FSelector$optimize(inst)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Feature Selection Algorithms — FSelector","text":"inst (FSelectInstanceSingleCrit | FSelectInstanceMultiCrit).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for Feature Selection Algorithms — FSelector","text":"data.table::data.table().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for Feature Selection Algorithms — FSelector","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Feature Selection Algorithms — FSelector","text":"","code":"FSelector$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelector.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Feature Selection Algorithms — FSelector","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":null,"dir":"Reference","previous_headings":"","what":"FSelectorFromOptimizer — FSelectorFromOptimizer","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"Internally used transform bbotk::Optimizer FSelector.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"mlr3fselect::FSelector -> FSelectorFromOptimizer","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"mlr3fselect::FSelector$format() mlr3fselect::FSelector$help() mlr3fselect::FSelector$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"FSelectorFromOptimizer$new() FSelectorFromOptimizer$optimize() FSelectorFromOptimizer$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"","code":"FSelectorFromOptimizer$new(optimizer, man = NA_character_)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"optimizer bbotk::Optimizer Optimizer called. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"method-optimize-","dir":"Reference","previous_headings":"","what":"Method optimize()","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"Performs feature selection FSelectInstanceSingleCrit / FSelectInstanceMultiCrit termination.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"","code":"FSelectorFromOptimizer$optimize(inst)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"inst (FSelectInstanceSingleCrit | FSelectInstanceMultiCrit).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"data.table::data.table.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"","code":"FSelectorFromOptimizer$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/FSelectorFromOptimizer.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FSelectorFromOptimizer — FSelectorFromOptimizer","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Feature Selection Objective — ObjectiveFSelect","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"Stores objective function estimates performance feature subsets. class usually constructed internally FSelectInstanceSingleCrit / FSelectInstanceMultiCrit.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"bbotk::Objective -> ObjectiveFSelect","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"task (mlr3::Task). learner (mlr3::Learner). resampling (mlr3::Resampling). measures (list mlr3::Measure). store_models (logical(1)). store_benchmark_result (logical(1)). archive (ArchiveFSelect). callbacks (List CallbackFSelects).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"bbotk::Objective$eval() bbotk::Objective$eval_dt() bbotk::Objective$eval_many() bbotk::Objective$format() bbotk::Objective$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"ObjectiveFSelect$new() ObjectiveFSelect$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"","code":"ObjectiveFSelect$new(   task,   learner,   resampling,   measures,   check_values = TRUE,   store_benchmark_result = TRUE,   store_models = FALSE,   archive = NULL,   callbacks = list() )"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"task (mlr3::Task) Task operate . learner (mlr3::Learner) Learner optimize feature subset . resampling (mlr3::Resampling) Resampling used evaluated performance feature subsets. Uninstantiated resamplings instantiated construction feature subsets evaluated data splits. Already instantiated resamplings kept unchanged. measures (list mlr3::Measure) Measures optimize. NULL, mlr3's default measure used. check_values (logical(1)) Check parameters evaluation results validity? store_benchmark_result (logical(1)) Store benchmark result archive? store_models (logical(1)). Store models benchmark result? archive (ArchiveFSelect) Reference archive FSelectInstanceSingleCrit | FSelectInstanceMultiCrit. NULL (default), benchmark result models stored. callbacks (list CallbackFSelect) List callbacks.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"","code":"ObjectiveFSelect$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/ObjectiveFSelect.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Feature Selection Objective — ObjectiveFSelect","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/auto_fselector.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for Automatic Feature Selection — auto_fselector","title":"Function for Automatic Feature Selection — auto_fselector","text":"AutoFSelector wraps mlr3::Learner augments automatic feature selection. auto_fselector() function creates AutoFSelector object.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/auto_fselector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for Automatic Feature Selection — auto_fselector","text":"","code":"auto_fselector(   fselector,   learner,   resampling,   measure = NULL,   term_evals = NULL,   term_time = NULL,   terminator = NULL,   store_fselect_instance = TRUE,   store_benchmark_result = TRUE,   store_models = FALSE,   check_values = FALSE,   callbacks = list() )"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/auto_fselector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for Automatic Feature Selection — auto_fselector","text":"fselector (FSelector) Optimization algorithm. learner (mlr3::Learner) Learner optimize feature subset . resampling (mlr3::Resampling) Resampling used evaluated performance feature subsets. Uninstantiated resamplings instantiated construction feature subsets evaluated data splits. Already instantiated resamplings kept unchanged. measure (mlr3::Measure) Measure optimize. NULL, default measure used. term_evals (integer(1)) Number allowed evaluations. Ignored terminator passed. term_time (integer(1)) Maximum allowed time seconds. Ignored terminator passed. terminator (Terminator) Stop criterion feature selection. store_fselect_instance (logical(1)) TRUE (default), stores internally created FSelectInstanceSingleCrit intermediate results slot $fselect_instance. set TRUE, store_models = TRUE store_benchmark_result (logical(1)) Store benchmark result archive? store_models (logical(1)). Store models benchmark result? check_values (logical(1)) Check parameters evaluation results validity? callbacks (list CallbackFSelect) List callbacks.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/auto_fselector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for Automatic Feature Selection — auto_fselector","text":"AutoFSelector.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/auto_fselector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for Automatic Feature Selection — auto_fselector","text":"AutoFSelector mlr3::Learner wraps another mlr3::Learner performs following steps $train(): wrapped (inner) learner trained feature subsets via resampling. feature selection can specified providing FSelector, bbotk::Terminator, mlr3::Resampling mlr3::Measure. final model fit complete training data best-found feature subset. $predict() AutoFSelector just calls predict method wrapped (inner) learner.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/auto_fselector.html","id":"resources","dir":"Reference","previous_headings":"","what":"Resources","title":"Function for Automatic Feature Selection — auto_fselector","text":"several sections feature selection mlr3book. Estimate Model Performance nested resampling (Tuning workflow transferable feature selection). Automate feature selection. gallery features collection case studies demos optimization.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/auto_fselector.html","id":"nested-resampling","dir":"Reference","previous_headings":"","what":"Nested Resampling","title":"Function for Automatic Feature Selection — auto_fselector","text":"Nested resampling can performed passing AutoFSelector object mlr3::resample() mlr3::benchmark(). access inner resampling results, set store_fselect_instance = TRUE execute mlr3::resample() mlr3::benchmark() store_models = TRUE (see examples). mlr3::Resampling passed AutoFSelector meant inner resampling, operating training set arbitrary outer resampling. reason feasible pass instantiated mlr3::Resampling .","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/auto_fselector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for Automatic Feature Selection — auto_fselector","text":"","code":"# Automatic Feature Selection # \\donttest{  # split to train and external set task = tsk(\"penguins\") split = partition(task, ratio = 0.8)  # create auto fselector afs = auto_fselector(   fselector = fs(\"random_search\"),   learner = lrn(\"classif.rpart\"),   resampling = rsmp (\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 4)  # optimize feature subset and fit final model afs$train(task, row_ids = split$train)  # predict with final model afs$predict(task, row_ids = split$test) #> <PredictionClassif> for 69 observations: #>     row_ids     truth  response #>           1    Adelie    Adelie #>          20    Adelie    Adelie #>          21    Adelie    Adelie #> ---                             #>         325 Chinstrap    Adelie #>         330 Chinstrap Chinstrap #>         331 Chinstrap    Adelie  # show result afs$fselect_result #>    bill_depth bill_length body_mass flipper_length island   sex year #> 1:      FALSE       FALSE      TRUE           TRUE   TRUE FALSE TRUE #>                                features classif.ce #> 1: body_mass,flipper_length,island,year  0.1847826  # model slot contains trained learner and fselect instance afs$model #> $learner #> <LearnerClassifRpart:classif.rpart>: Classification Tree #> * Model: rpart #> * Parameters: xval=0 #> * Packages: mlr3, rpart #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, factor, ordered #> * Properties: importance, missings, multiclass, selected_features, #>   twoclass, weights #>  #> $features #> [1] \"body_mass\"      \"flipper_length\" \"island\"         \"year\"           #>  #> $fselect_instance #> <FSelectInstanceSingleCrit> #> * State:  Optimized #> * Objective: <ObjectiveFSelect:classif.rpart_on_penguins> #> * Terminator: <TerminatorEvals> #> * Result: #>    bill_depth bill_length body_mass flipper_length island   sex year classif.ce #> 1:      FALSE       FALSE      TRUE           TRUE   TRUE FALSE TRUE  0.1847826 #> * Archive: #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:      FALSE       FALSE      TRUE          FALSE  FALSE FALSE FALSE #> 2:      FALSE       FALSE      TRUE           TRUE  FALSE FALSE FALSE #> 3:      FALSE       FALSE      TRUE           TRUE   TRUE FALSE  TRUE #> 4:      FALSE       FALSE      TRUE          FALSE  FALSE FALSE FALSE #>    classif.ce #> 1:  0.3369565 #> 2:  0.2717391 #> 3:  0.1847826 #> 4:  0.3369565 #>   # shortcut trained learner afs$learner #> <LearnerClassifRpart:classif.rpart>: Classification Tree #> * Model: rpart #> * Parameters: xval=0 #> * Packages: mlr3, rpart #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, factor, ordered #> * Properties: importance, missings, multiclass, selected_features, #>   twoclass, weights  # shortcut fselect instance afs$fselect_instance #> <FSelectInstanceSingleCrit> #> * State:  Optimized #> * Objective: <ObjectiveFSelect:classif.rpart_on_penguins> #> * Terminator: <TerminatorEvals> #> * Result: #>    bill_depth bill_length body_mass flipper_length island   sex year classif.ce #> 1:      FALSE       FALSE      TRUE           TRUE   TRUE FALSE TRUE  0.1847826 #> * Archive: #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:      FALSE       FALSE      TRUE          FALSE  FALSE FALSE FALSE #> 2:      FALSE       FALSE      TRUE           TRUE  FALSE FALSE FALSE #> 3:      FALSE       FALSE      TRUE           TRUE   TRUE FALSE  TRUE #> 4:      FALSE       FALSE      TRUE          FALSE  FALSE FALSE FALSE #>    classif.ce #> 1:  0.3369565 #> 2:  0.2717391 #> 3:  0.1847826 #> 4:  0.3369565   # Nested Resampling  afs = auto_fselector(   fselector = fs(\"random_search\"),   learner = lrn(\"classif.rpart\"),   resampling = rsmp (\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 4)  resampling_outer = rsmp(\"cv\", folds = 3) rr = resample(task, afs, resampling_outer, store_models = TRUE)  # retrieve inner feature selection results. extract_inner_fselect_results(rr) #>    iteration bill_depth bill_length body_mass flipper_length island   sex  year #> 1:         1      FALSE        TRUE      TRUE          FALSE   TRUE  TRUE FALSE #> 2:         2      FALSE        TRUE      TRUE          FALSE   TRUE FALSE FALSE #> 3:         3       TRUE       FALSE     FALSE          FALSE   TRUE  TRUE  TRUE #>    classif.ce                         features  task_id              learner_id #> 1: 0.01315789 bill_length,body_mass,island,sex penguins classif.rpart.fselector #> 2: 0.05263158     bill_length,body_mass,island penguins classif.rpart.fselector #> 3: 0.15584416       bill_depth,island,sex,year penguins classif.rpart.fselector #>    resampling_id #> 1:            cv #> 2:            cv #> 3:            cv  # performance scores estimated on the outer resampling rr$score() #>                 task  task_id             learner              learner_id #> 1: <TaskClassif[50]> penguins <AutoFSelector[46]> classif.rpart.fselector #> 2: <TaskClassif[50]> penguins <AutoFSelector[46]> classif.rpart.fselector #> 3: <TaskClassif[50]> penguins <AutoFSelector[46]> classif.rpart.fselector #>            resampling resampling_id iteration              prediction #> 1: <ResamplingCV[20]>            cv         1 <PredictionClassif[20]> #> 2: <ResamplingCV[20]>            cv         2 <PredictionClassif[20]> #> 3: <ResamplingCV[20]>            cv         3 <PredictionClassif[20]> #>    classif.ce #> 1: 0.08695652 #> 2: 0.06086957 #> 3: 0.22807018  # unbiased performance of the final model trained on the full data set rr$aggregate() #> classif.ce  #>  0.1252988  # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/callback_fselect.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Feature Selection Callback — callback_fselect","title":"Create Feature Selection Callback — callback_fselect","text":"Function create CallbackFSelect. Predefined callbacks stored dictionary mlr_callbacks can retrieved clbk(). Feature selection callbacks can called different stages feature selection. stages prefixed on_*.   See also section parameters information stages. feature selection callback works bbotk::ContextOptimization ContextEval.","code":"Start Feature Selection      - on_optimization_begin     Start FSelect Batch          - on_optimizer_before_eval         Start Evaluation              - on_eval_after_design              - on_eval_after_benchmark              - on_eval_before_archive         End Evaluation          - on_optimizer_after_eval     End FSelect Batch      - on_result      - on_optimization_end End Feature Selection"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/callback_fselect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Feature Selection Callback — callback_fselect","text":"","code":"callback_fselect(   id,   label = NA_character_,   man = NA_character_,   on_optimization_begin = NULL,   on_optimizer_before_eval = NULL,   on_eval_after_design = NULL,   on_eval_after_benchmark = NULL,   on_eval_before_archive = NULL,   on_optimizer_after_eval = NULL,   on_result = NULL,   on_optimization_end = NULL )"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/callback_fselect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Feature Selection Callback — callback_fselect","text":"id (character(1)) Identifier new instance. label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). on_optimization_begin (function()) Stage called beginning optimization. Called Optimizer$optimize(). context available bbotk::ContextOptimization. on_optimizer_before_eval (function()) Stage called optimizer proposes points. Called OptimInstance$eval_batch(). context available bbotk::ContextOptimization. on_eval_after_design (function()) Stage called design created. Called ObjectiveFSelect$eval_many(). context available ContextEval. on_eval_after_benchmark (function()) Stage called feature sets evaluated. Called ObjectiveFSelect$eval_many(). context available ContextEval. on_eval_before_archive (function()) Stage called performance values written archive. Called ObjectiveFSelect$eval_many(). context available ContextEval. on_optimizer_after_eval (function()) Stage called points evaluated. Called OptimInstance$eval_batch(). context available bbotk::ContextOptimization. on_result (function()) Stage called result written. Called OptimInstance$assign_result(). context available bbotk::ContextOptimization. on_optimization_end (function()) Stage called end optimization. Called Optimizer$optimize(). context available bbotk::ContextOptimization.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/callback_fselect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Feature Selection Callback — callback_fselect","text":"implementing callback, function must two arguments named callback context. callback can write data state ($state), e.g. settings affect callback . Avoid writing large data state. can slow feature selection evaluation configurations parallelized. Feature selection callbacks access two different contexts depending stage. stages on_eval_after_design, on_eval_after_benchmark, on_eval_before_archive access ContextEval. context can used customize evaluation batch feature sets. Changes state callback lost evaluation batch changes fselect instance fselector possible. Persistent data written archive via $aggregated_performance (see ContextEval). stages access ContextOptimization. context can used modify fselect instance, archive, fselector final result. two different contexts evaluation can parallelized .e. multiple instances ContextEval exists different workers time.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/callback_fselect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Feature Selection Callback — callback_fselect","text":"","code":"# Write archive to disk callback_fselect(\"mlr3fselect.backup\",   on_optimization_end = function(callback, context) {     saveRDS(context$instance$archive, \"archive.rds\")   } ) #> <CallbackFSelect:mlr3fselect.backup> #> * Active Stages: on_optimization_end"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_archives.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Inner Feature Selection Archives — extract_inner_fselect_archives","title":"Extract Inner Feature Selection Archives — extract_inner_fselect_archives","text":"Extract inner feature selection archives nested resampling. Implemented mlr3::ResampleResult mlr3::BenchmarkResult. function iterates AutoFSelector objects binds archives data.table::data.table(). AutoFSelector must initialized store_fselect_instance = TRUE resample() benchmark() must called store_models = TRUE.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_archives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Inner Feature Selection Archives — extract_inner_fselect_archives","text":"","code":"extract_inner_fselect_archives(x, exclude_columns = \"uhash\")"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_archives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Inner Feature Selection Archives — extract_inner_fselect_archives","text":"x (mlr3::ResampleResult | mlr3::BenchmarkResult). exclude_columns (character()) Exclude columns result table. Set NULL column excluded.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_archives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Inner Feature Selection Archives — extract_inner_fselect_archives","text":"data.table::data.table().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_archives.html","id":"data-structure","dir":"Reference","previous_headings":"","what":"Data structure","title":"Extract Inner Feature Selection Archives — extract_inner_fselect_archives","text":"returned data table following columns: experiment (integer(1)) Index, giving according row number original benchmark grid. iteration (integer(1)) Iteration outer resampling. One column feature task. One column performance measure. runtime_learners (numeric(1)) Sum training predict times logged learners per mlr3::ResampleResult / evaluation. include potential overhead time. timestamp (POSIXct) Time stamp evaluation logged archive. batch_nr (integer(1)) Feature sets evaluated batches. batch unique batch number. resample_result (mlr3::ResampleResult) Resample result inner resampling. task_id (character(1)). learner_id (character(1)). resampling_id (character(1)).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_archives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Inner Feature Selection Archives — extract_inner_fselect_archives","text":"","code":"# Nested Resampling on Palmer Penguins Data Set  # create auto fselector at = auto_fselector(   fselector = fs(\"random_search\"),   learner = lrn(\"classif.rpart\"),   resampling = rsmp (\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 4)  resampling_outer = rsmp(\"cv\", folds = 2) rr = resample(tsk(\"penguins\"), at, resampling_outer, store_models = TRUE)  # extract inner archives extract_inner_fselect_archives(rr) #>    iteration bill_depth bill_length body_mass flipper_length island   sex  year #> 1:         1       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #> 2:         1       TRUE        TRUE      TRUE           TRUE  FALSE  TRUE  TRUE #> 3:         1       TRUE        TRUE     FALSE           TRUE   TRUE  TRUE  TRUE #> 4:         1      FALSE       FALSE     FALSE          FALSE   TRUE  TRUE FALSE #> 5:         2       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 6:         2      FALSE        TRUE      TRUE          FALSE  FALSE  TRUE FALSE #> 7:         2      FALSE       FALSE      TRUE           TRUE   TRUE  TRUE FALSE #> 8:         2      FALSE        TRUE      TRUE          FALSE   TRUE FALSE  TRUE #>    classif.ce runtime_learners           timestamp batch_nr warnings errors #> 1: 0.05263158            0.010 2023-03-02 10:46:59        1        0      0 #> 2: 0.05263158            0.010 2023-03-02 10:46:59        2        0      0 #> 3: 0.05263158            0.015 2023-03-02 10:46:59        3        0      0 #> 4: 0.42105263            0.009 2023-03-02 10:46:59        4        0      0 #> 5: 0.28070175            0.012 2023-03-02 10:47:00        1        0      0 #> 6: 0.05263158            0.011 2023-03-02 10:47:00        2        0      0 #> 7: 0.14035088            0.009 2023-03-02 10:47:00        3        0      0 #> 8: 0.01754386            0.013 2023-03-02 10:47:00        4        0      0 #>                                                          features #> 1: bill_depth,bill_length,body_mass,flipper_length,island,sex,... #> 2:       bill_depth,bill_length,body_mass,flipper_length,sex,year #> 3:          bill_depth,bill_length,flipper_length,island,sex,year #> 4:                                                     island,sex #> 5:                                                     bill_depth #> 6:                                      bill_length,body_mass,sex #> 7:                            body_mass,flipper_length,island,sex #> 8:                              bill_length,body_mass,island,year #>         resample_result  task_id              learner_id resampling_id #> 1: <ResampleResult[21]> penguins classif.rpart.fselector            cv #> 2: <ResampleResult[21]> penguins classif.rpart.fselector            cv #> 3: <ResampleResult[21]> penguins classif.rpart.fselector            cv #> 4: <ResampleResult[21]> penguins classif.rpart.fselector            cv #> 5: <ResampleResult[21]> penguins classif.rpart.fselector            cv #> 6: <ResampleResult[21]> penguins classif.rpart.fselector            cv #> 7: <ResampleResult[21]> penguins classif.rpart.fselector            cv #> 8: <ResampleResult[21]> penguins classif.rpart.fselector            cv"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Inner Feature Selection Results — extract_inner_fselect_results","title":"Extract Inner Feature Selection Results — extract_inner_fselect_results","text":"Extract inner feature selection results nested resampling. Implemented mlr3::ResampleResult mlr3::BenchmarkResult.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Inner Feature Selection Results — extract_inner_fselect_results","text":"","code":"extract_inner_fselect_results(x, fselect_instance, ...)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Inner Feature Selection Results — extract_inner_fselect_results","text":"x (mlr3::ResampleResult | mlr3::BenchmarkResult). fselect_instance (logical(1)) TRUE, instances added table. ... () Additional arguments.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Inner Feature Selection Results — extract_inner_fselect_results","text":"data.table::data.table().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Inner Feature Selection Results — extract_inner_fselect_results","text":"function iterates AutoFSelector objects binds feature selection results data.table::data.table(). AutoFSelector must initialized store_fselect_instance = TRUE resample() benchmark() must called store_models = TRUE. Optionally, instance can added iteration.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_results.html","id":"data-structure","dir":"Reference","previous_headings":"","what":"Data structure","title":"Extract Inner Feature Selection Results — extract_inner_fselect_results","text":"returned data table following columns: experiment (integer(1)) Index, giving according row number original benchmark grid. iteration (integer(1)) Iteration outer resampling. One column feature task. One column performance measure. features (character()) Vector selected feature set. task_id (character(1)). learner_id (character(1)). resampling_id (character(1)).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/extract_inner_fselect_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Inner Feature Selection Results — extract_inner_fselect_results","text":"","code":"# Nested Resampling on Palmer Penguins Data Set  # create auto fselector at = auto_fselector(   fselector = fs(\"random_search\"),   learner = lrn(\"classif.rpart\"),   resampling = rsmp (\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 4)  resampling_outer = rsmp(\"cv\", folds = 2) rr = resample(tsk(\"iris\"), at, resampling_outer, store_models = TRUE)  # extract inner results extract_inner_fselect_results(rr) #>    iteration Petal.Length Petal.Width Sepal.Length Sepal.Width classif.ce #> 1:         1         TRUE       FALSE         TRUE        TRUE       0.08 #> 2:         2         TRUE        TRUE        FALSE        TRUE       0.04 #>                                 features task_id              learner_id #> 1: Petal.Length,Sepal.Length,Sepal.Width    iris classif.rpart.fselector #> 2:  Petal.Length,Petal.Width,Sepal.Width    iris classif.rpart.fselector #>    resampling_id #> 1:            cv #> 2:            cv"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for FSelect Construction — fs","title":"Syntactic Sugar for FSelect Construction — fs","text":"Functions retrieve objects, set parameters assign fields one go. Relies mlr3misc::dictionary_sugar_get() extract objects respective mlr3misc::Dictionary: fs() FSelector mlr_fselectors. fss() list FSelectors mlr_fselectors. trm() Terminator mlr_terminators. trms() list Terminators mlr_terminators.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for FSelect Construction — fs","text":"","code":"fs(.key, ...)  fss(.keys, ...)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for FSelect Construction — fs","text":".key (character(1)) Key passed respective dictionary retrieve object. ... (named list()) Named arguments passed constructor, set parameters paradox::ParamSet, set public field. See mlr3misc::dictionary_sugar_get() details. .keys (character()) Keys passed respective dictionary retrieve multiple objects.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar for FSelect Construction — fs","text":"R6::R6Class object respective type, list R6::R6Class objects plural versions.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntactic Sugar for FSelect Construction — fs","text":"","code":"# random search with batch size of 5 fs(\"random_search\", batch_size = 5) #> <FSelectorRandomSearch>: Random Search #> * Parameters: batch_size=5 #> * Properties: single-crit, multi-crit #> * Packages: mlr3fselect  # run time terminator with 20 seconds trm(\"run_time\", secs = 20) #> <TerminatorRunTime>: Run Time #> * Parameters: secs=20"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for Feature Selection — fselect","title":"Function for Feature Selection — fselect","text":"Function optimize features mlr3::Learner. function internally creates FSelectInstanceSingleCrit FSelectInstanceMultiCrit describes feature selection problem. executes feature selection FSelector (method) returns result fselect instance ($result). ArchiveFSelect ($archive) stores evaluated hyperparameter configurations performance scores.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for Feature Selection — fselect","text":"","code":"fselect(   fselector,   task,   learner,   resampling,   measures = NULL,   term_evals = NULL,   term_time = NULL,   terminator = NULL,   store_benchmark_result = TRUE,   store_models = FALSE,   check_values = FALSE,   callbacks = list() )"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for Feature Selection — fselect","text":"fselector (FSelector) Optimization algorithm. task (mlr3::Task) Task operate . learner (mlr3::Learner) Learner optimize feature subset . resampling (mlr3::Resampling) Resampling used evaluated performance feature subsets. Uninstantiated resamplings instantiated construction feature subsets evaluated data splits. Already instantiated resamplings kept unchanged. measures (mlr3::Measure list mlr3::Measure) single measure creates FSelectInstanceSingleCrit multiple measures FSelectInstanceMultiCrit. NULL, default measure used. term_evals (integer(1)) Number allowed evaluations. Ignored terminator passed. term_time (integer(1)) Maximum allowed time seconds. Ignored terminator passed. terminator (Terminator) Stop criterion feature selection. store_benchmark_result (logical(1)) Store benchmark result archive? store_models (logical(1)). Store models benchmark result? check_values (logical(1)) Check parameters evaluation results validity? callbacks (list CallbackFSelect) List callbacks.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for Feature Selection — fselect","text":"FSelectInstanceSingleCrit | FSelectInstanceMultiCrit","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for Feature Selection — fselect","text":"mlr3::Task, mlr3::Learner, mlr3::Resampling, mlr3::Measure Terminator used construct FSelectInstanceSingleCrit. multiple performance Measures supplied, FSelectInstanceMultiCrit created. parameter term_evals term_time shortcuts create Terminator. parameters passed, TerminatorCombo constructed. Terminators, pass one terminator. termination criterion needed, set term_evals, term_time terminator NULL.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect.html","id":"resources","dir":"Reference","previous_headings":"","what":"Resources","title":"Function for Feature Selection — fselect","text":"several sections feature selection mlr3book. Getting started wrapper feature selection. gallery features collection case studies demos optimization. Utilize built-feature importance models Recursive Feature Elimination. Run feature selection Shadow Variable Search. Feature Selection Titanic data set.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect.html","id":"analysis","dir":"Reference","previous_headings":"","what":"Analysis","title":"Function for Feature Selection — fselect","text":"analyzing feature selection results, recommended pass archive .data.table(). returned data table joined benchmark result adds mlr3::ResampleResult feature set. archive provides various getters (e.g. $learners()) ease access. getters extract position () unique hash (uhash). complete list getters see methods section. benchmark result ($benchmark_result) allows score feature sets different measure. Alternatively, measures can supplied .data.table().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for Feature Selection — fselect","text":"","code":"# Feature selection on the Palmer Penguins data set task = tsk(\"pima\") learner = lrn(\"classif.rpart\")  # Run feature selection instance = fselect(   fselector = fs(\"random_search\"),   task = task,   learner = learner,   resampling = rsmp (\"holdout\"),   measures = msr(\"classif.ce\"),   term_evals = 4)  # Subset task to optimized feature set task$select(instance$result_feature_set)  # Train the learner with optimal feature set on the full data set learner$train(task)  # Inspect all evaluated configurations as.data.table(instance$archive) #>      age glucose insulin  mass pedigree pregnant pressure triceps classif.ce #> 1:  TRUE    TRUE    TRUE FALSE     TRUE     TRUE     TRUE    TRUE  0.2929688 #> 2: FALSE    TRUE   FALSE FALSE     TRUE     TRUE    FALSE   FALSE  0.2734375 #> 3:  TRUE    TRUE    TRUE FALSE    FALSE     TRUE     TRUE    TRUE  0.2968750 #> 4:  TRUE    TRUE    TRUE  TRUE     TRUE     TRUE     TRUE    TRUE  0.2695312 #>    runtime_learners           timestamp batch_nr warnings errors #> 1:            0.018 2023-03-02 10:47:03        1        0      0 #> 2:            0.017 2023-03-02 10:47:03        2        0      0 #> 3:            0.016 2023-03-02 10:47:03        3        0      0 #> 4:            0.019 2023-03-02 10:47:03        4        0      0 #>                                              features      resample_result #> 1: age,glucose,insulin,pedigree,pregnant,pressure,... <ResampleResult[21]> #> 2:                          glucose,pedigree,pregnant <ResampleResult[21]> #> 3:      age,glucose,insulin,pregnant,pressure,triceps <ResampleResult[21]> #> 4:     age,glucose,insulin,mass,pedigree,pregnant,... <ResampleResult[21]>"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for Nested Resampling — fselect_nested","title":"Function for Nested Resampling — fselect_nested","text":"Function conduct nested resampling.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for Nested Resampling — fselect_nested","text":"","code":"fselect_nested(   fselector,   task,   learner,   inner_resampling,   outer_resampling,   measure = NULL,   term_evals = NULL,   term_time = NULL,   terminator = NULL,   store_fselect_instance = TRUE,   store_benchmark_result = TRUE,   store_models = FALSE,   check_values = FALSE,   callbacks = list() )"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for Nested Resampling — fselect_nested","text":"fselector (FSelector) Optimization algorithm. task (mlr3::Task) Task operate . learner (mlr3::Learner) Learner optimize feature subset . inner_resampling (mlr3::Resampling) Resampling used inner loop. outer_resampling mlr3::Resampling) Resampling used outer loop. measure (mlr3::Measure) Measure optimize. NULL, default measure used. term_evals (integer(1)) Number allowed evaluations. Ignored terminator passed. term_time (integer(1)) Maximum allowed time seconds. Ignored terminator passed. terminator (Terminator) Stop criterion feature selection. store_fselect_instance (logical(1)) TRUE (default), stores internally created FSelectInstanceSingleCrit intermediate results slot $fselect_instance. set TRUE, store_models = TRUE store_benchmark_result (logical(1)) Store benchmark result archive? store_models (logical(1)). Store models benchmark result? check_values (logical(1)) Check parameters evaluation results validity? callbacks (list CallbackFSelect) List callbacks.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for Nested Resampling — fselect_nested","text":"mlr3::ResampleResult","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fselect_nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for Nested Resampling — fselect_nested","text":"","code":"# Nested resampling on Palmer Penguins data set rr = fselect_nested(   fselector = fs(\"random_search\"),   task = tsk(\"penguins\"),   learner = lrn(\"classif.rpart\"),   inner_resampling = rsmp (\"holdout\"),   outer_resampling = rsmp(\"cv\", folds = 2),   measure = msr(\"classif.ce\"),   term_evals = 4)  # Performance scores estimated on the outer resampling rr$score() #>                 task  task_id             learner              learner_id #> 1: <TaskClassif[50]> penguins <AutoFSelector[46]> classif.rpart.fselector #> 2: <TaskClassif[50]> penguins <AutoFSelector[46]> classif.rpart.fselector #>            resampling resampling_id iteration              prediction #> 1: <ResamplingCV[20]>            cv         1 <PredictionClassif[20]> #> 2: <ResamplingCV[20]>            cv         2 <PredictionClassif[20]> #>    classif.ce #> 1: 0.07558140 #> 2: 0.04069767  # Unbiased performance of the final model trained on the full data set rr$aggregate() #> classif.ce  #> 0.05813953"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Instance Construction — fsi","title":"Syntactic Sugar for Instance Construction — fsi","text":"Function construct FSelectInstanceSingleCrit FSelectInstanceMultiCrit.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Instance Construction — fsi","text":"","code":"fsi(   task,   learner,   resampling,   measures = NULL,   terminator,   store_benchmark_result = TRUE,   store_models = FALSE,   check_values = FALSE,   callbacks = list() )"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Instance Construction — fsi","text":"task (mlr3::Task) Task operate . learner (mlr3::Learner) Learner optimize feature subset . resampling (mlr3::Resampling) Resampling used evaluated performance feature subsets. Uninstantiated resamplings instantiated construction feature subsets evaluated data splits. Already instantiated resamplings kept unchanged. measures (mlr3::Measure list mlr3::Measure) single measure creates FSelectInstanceSingleCrit multiple measures FSelectInstanceMultiCrit. NULL, default measure used. terminator (Terminator) Stop criterion feature selection. store_benchmark_result (logical(1)) Store benchmark result archive? store_models (logical(1)). Store models benchmark result? check_values (logical(1)) Check parameters evaluation results validity? callbacks (list CallbackFSelect) List callbacks.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fsi.html","id":"resources","dir":"Reference","previous_headings":"","what":"Resources","title":"Syntactic Sugar for Instance Construction — fsi","text":"several sections feature selection mlr3book. Getting started wrapper feature selection. gallery features collection case studies demos optimization. Utilize built-feature importance models Recursive Feature Elimination. Run feature selection Shadow Variable Search. Feature Selection Titanic data set.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fsi.html","id":"default-measures","dir":"Reference","previous_headings":"","what":"Default Measures","title":"Syntactic Sugar for Instance Construction — fsi","text":"measure passed, default measure used. default measure depends task type.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/fsi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntactic Sugar for Instance Construction — fsi","text":"","code":"# Feature selection on Palmer Penguins data set # \\donttest{  task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")  # Construct feature selection instance instance = fsi(   task = task,   learner = learner,   resampling = rsmp(\"cv\", folds = 3),   measures = msr(\"classif.ce\"),   terminator = trm(\"evals\", n_evals = 4) )  # Choose optimization algorithm fselector = fs(\"random_search\", batch_size = 2)  # Run feature selection fselector$optimize(instance) #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:       TRUE        TRUE      TRUE           TRUE   TRUE FALSE FALSE #>                                                  features classif.ce #> 1: bill_depth,bill_length,body_mass,flipper_length,island 0.04940249  # Subset task to optimal feature set task$select(instance$result_feature_set)  # Train the learner with optimal feature set on the full data set learner$train(task)  # Inspect all evaluated sets as.data.table(instance$archive) #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:       TRUE        TRUE     FALSE           TRUE  FALSE  TRUE FALSE #> 2:       TRUE        TRUE      TRUE           TRUE   TRUE FALSE FALSE #> 3:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #> 4:      FALSE       FALSE      TRUE           TRUE   TRUE  TRUE  TRUE #>    classif.ce runtime_learners           timestamp batch_nr warnings errors #> 1: 0.05232647            0.034 2023-03-02 10:47:06        1        0      0 #> 2: 0.04940249            0.033 2023-03-02 10:47:06        1        0      0 #> 3: 0.04940249            0.033 2023-03-02 10:47:06        2        0      0 #> 4: 0.15115688            0.033 2023-03-02 10:47:06        2        0      0 #>                                                          features #> 1:                      bill_depth,bill_length,flipper_length,sex #> 2:         bill_depth,bill_length,body_mass,flipper_length,island #> 3: bill_depth,bill_length,body_mass,flipper_length,island,sex,... #> 4:                       body_mass,flipper_length,island,sex,year #>         resample_result #> 1: <ResampleResult[21]> #> 2: <ResampleResult[21]> #> 3: <ResampleResult[21]> #> 4: <ResampleResult[21]> # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr3fselect-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3fselect: Feature Selection for 'mlr3' — mlr3fselect-package","title":"mlr3fselect: Feature Selection for 'mlr3' — mlr3fselect-package","text":"Feature selection package 'mlr3' ecosystem. selects optimal feature set 'mlr3' learner. package works several optimization algorithms e.g. Random Search, Recursive Feature Elimination, Genetic Search. Moreover, can automatically optimize learners estimate performance optimized feature sets nested resampling.","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr3fselect-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3fselect: Feature Selection for 'mlr3' — mlr3fselect-package","text":"Maintainer: Marc Becker marcbecker@posteo.de (ORCID) Authors: Patrick Schratz patrick.schratz@gmail.com (ORCID) Michel Lang michellang@gmail.com (ORCID) Bernd Bischl bernd_bischl@gmx.net (ORCID)","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr3fselect.backup.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup Benchmark Result Callback — mlr3fselect.backup","title":"Backup Benchmark Result Callback — mlr3fselect.backup","text":"CallbackFSelect writes mlr3::BenchmarkResult batch disk.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr3fselect.backup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backup Benchmark Result Callback — mlr3fselect.backup","text":"","code":"clbk(\"mlr3fselect.backup\", path = \"backup.rds\") #> <CallbackFSelect:mlr3fselect.backup>: Backup Benchmark Result Callback #> * Active Stages: on_optimizer_after_eval, on_optimization_begin  # Run feature selection on the Palmer Penguins data set instance = fselect(   fselector = fs(\"random_search\"),   task = tsk(\"pima\"),   learner = lrn(\"classif.rpart\"),   resampling = rsmp (\"holdout\"),   measures = msr(\"classif.ce\"),   term_evals = 4,   callbacks = clbk(\"mlr3fselect.backup\", path = tempfile(fileext = \".rds\")))"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr3fselect.svm_rfe.html","id":null,"dir":"Reference","previous_headings":"","what":"SVM-RFE Callback — mlr3fselect.svm_rfe","title":"SVM-RFE Callback — mlr3fselect.svm_rfe","text":"Runs recursive feature elimination mlr3learners::LearnerClassifSVM. SVM must configured type = \"C-classification\" kernel = \"linear\".","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr3fselect.svm_rfe.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SVM-RFE Callback — mlr3fselect.svm_rfe","text":"Guyon , Weston J, Barnhill S, Vapnik V (2002). “Gene Selection Cancer Classification using Support Vector Machines.” Machine Learning, 46(1), 389--422. ISSN 1573-0565, doi:10.1023/:1012487302797 .","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr3fselect.svm_rfe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SVM-RFE Callback — mlr3fselect.svm_rfe","text":"","code":"clbk(\"mlr3fselect.svm_rfe\") #> <CallbackFSelect:mlr3fselect.svm_rfe>: SVM-RFE Callback #> * Active Stages: on_optimization_begin  library(mlr3learners)  # Create instance with classification svm with linear kernel instance = fsi(   task = tsk(\"sonar\"),   learner = lrn(\"classif.svm\", type = \"C-classification\", kernel = \"linear\"),   resampling = rsmp(\"cv\", folds = 3),   measures = msr(\"classif.ce\"),   terminator = trm(\"none\"),   callbacks = clbk(\"mlr3fselect.svm_rfe\"),   store_models = TRUE )  fselector = fs(\"rfe\", feature_number = 5, n_features = 10)  # Run recursive feature elimination on the Sonar data set fselector$optimize(instance) #>      V1   V10   V11  V12   V13   V14   V15  V16   V17   V18   V19    V2   V20 #> 1: TRUE FALSE FALSE TRUE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE #>      V21  V22   V23   V24   V25   V26   V27   V28   V29   V3  V30  V31   V32 #> 1: FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE TRUE TRUE FALSE #>      V33   V34   V35   V36  V37   V38   V39    V4   V40   V41   V42   V43  V44 #> 1: FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE #>      V45   V46  V47   V48  V49    V5  V50   V51  V52   V53   V54   V55   V56 #> 1: FALSE FALSE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE #>      V57   V58   V59    V6   V60    V7   V8   V9                  features #> 1: FALSE FALSE FALSE FALSE FALSE FALSE TRUE TRUE V1,V12,V16,V22,V3,V30,... #>    classif.ce #> 1:  0.1874396"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of FSelectors — mlr_fselectors","title":"Dictionary of FSelectors — mlr_fselectors","text":"mlr3misc::Dictionary storing objects class FSelector. fselector associated help page, see mlr_fselectors_[id]. convenient way retrieve construct fselectors, see fs()/fss().","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary of FSelectors — mlr_fselectors","text":"R6::R6Class object inheriting mlr3misc::Dictionary.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dictionary of FSelectors — mlr_fselectors","text":"See mlr3misc::Dictionary.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 methods","title":"Dictionary of FSelectors — mlr_fselectors","text":".data.table(dict, ..., objects = FALSE)mlr3misc::Dictionary -> data.table::data.table() Returns data.table::data.table() fields \"key\", \"label\", \"properties\" \"packages\" columns. objects set TRUE, constructed objects returned list column named object.","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of FSelectors — mlr_fselectors","text":"","code":"as.data.table(mlr_fselectors) #>                       key                         label #> 1:          design_points                 Design Points #> 2:      exhaustive_search             Exhaustive Search #> 3:         genetic_search                Genetic Search #> 4:          random_search                 Random Search #> 5:                    rfe Recursive Feature Elimination #> 6:                  rfecv Recursive Feature Elimination #> 7:             sequential             Sequential Search #> 8: shadow_variable_search        Shadow Variable Search #>                             properties           packages #> 1: dependencies,single-crit,multi-crit  mlr3fselect,bbotk #> 2:              single-crit,multi-crit        mlr3fselect #> 3:                         single-crit mlr3fselect,genalg #> 4:              single-crit,multi-crit        mlr3fselect #> 5:          single-crit,requires_model        mlr3fselect #> 6:          single-crit,requires_model        mlr3fselect #> 7:                         single-crit        mlr3fselect #> 8:                         single-crit        mlr3fselect mlr_fselectors$get(\"random_search\") #> <FSelectorRandomSearch>: Random Search #> * Parameters: batch_size=1 #> * Properties: single-crit, multi-crit #> * Packages: mlr3fselect fs(\"random_search\") #> <FSelectorRandomSearch>: Random Search #> * Parameters: batch_size=1 #> * Properties: single-crit, multi-crit #> * Packages: mlr3fselect"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Selection with Design Points — mlr_fselectors_design_points","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"Feature selection using user-defined feature sets.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"feature sets evaluated order given. feature selection terminates feature sets evaluated. necessary set termination criterion.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"FSelector can instantiated associated sugar function fs():","code":"fs(\"design_points\")"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"batch_size integer(1) Maximum number configurations try batch. design data.table::data.table Design points try search, one per row.","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"mlr3fselect::FSelector -> mlr3fselect::FSelectorFromOptimizer -> FSelectorDesignPoints","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"mlr3fselect::FSelector$format() mlr3fselect::FSelector$help() mlr3fselect::FSelector$print() mlr3fselect::FSelectorFromOptimizer$optimize()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"FSelectorDesignPoints$new() FSelectorDesignPoints$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"","code":"FSelectorDesignPoints$new()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"","code":"FSelectorDesignPoints$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_design_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Selection with Design Points — mlr_fselectors_design_points","text":"","code":"# Feature Selection # \\donttest{  # retrieve task and load learner task = tsk(\"pima\") learner = lrn(\"classif.rpart\")  # create design design = mlr3misc::rowwise_table(   ~age, ~glucose, ~insulin, ~mass, ~pedigree, ~pregnant, ~pressure, ~triceps,   TRUE, FALSE,    TRUE,     TRUE,  FALSE,     TRUE,       FALSE,    TRUE,   TRUE, TRUE,     FALSE,    TRUE,  FALSE,     TRUE,       FALSE,    FALSE,   TRUE, FALSE,    TRUE,     TRUE,  FALSE,     TRUE,       FALSE,    FALSE,   TRUE, FALSE,    TRUE,     TRUE,  FALSE,     TRUE,       TRUE,     TRUE )  # run feature selection on the Pima Indians diabetes data set instance = fselect(   fselector = fs(\"design_points\", design = design),   task = task,   learner = learner,   resampling = rsmp(\"holdout\"),   measure = msr(\"classif.ce\") )  # best performing feature set instance$result #>     age glucose insulin mass pedigree pregnant pressure triceps #> 1: TRUE   FALSE    TRUE TRUE    FALSE     TRUE    FALSE    TRUE #>                             features classif.ce #> 1: age,insulin,mass,pregnant,triceps   0.265625  # all evaluated feature sets as.data.table(instance$archive) #>     age glucose insulin mass pedigree pregnant pressure triceps classif.ce #> 1: TRUE   FALSE    TRUE TRUE    FALSE     TRUE    FALSE    TRUE  0.2656250 #> 2: TRUE    TRUE   FALSE TRUE    FALSE     TRUE    FALSE   FALSE  0.2773438 #> 3: TRUE   FALSE    TRUE TRUE    FALSE     TRUE    FALSE   FALSE  0.2656250 #> 4: TRUE   FALSE    TRUE TRUE    FALSE     TRUE     TRUE    TRUE  0.2890625 #>    runtime_learners           timestamp batch_nr warnings errors #> 1:            0.023 2023-03-02 10:47:13        1        0      0 #> 2:            0.017 2023-03-02 10:47:13        2        0      0 #> 3:            0.019 2023-03-02 10:47:13        3        0      0 #> 4:            0.020 2023-03-02 10:47:13        4        0      0 #>                                      features      resample_result #> 1:          age,insulin,mass,pregnant,triceps <ResampleResult[21]> #> 2:                  age,glucose,mass,pregnant <ResampleResult[21]> #> 3:                  age,insulin,mass,pregnant <ResampleResult[21]> #> 4: age,insulin,mass,pregnant,pressure,triceps <ResampleResult[21]>  # subset the task and fit the final model task$select(instance$result_feature_set) learner$train(task) # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"Feature Selection using Exhaustive Search Algorithm. Exhaustive Search generates possible feature sets.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"feature selection terminates feature sets evaluated. necessary set termination criterion.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"FSelector can instantiated associated sugar function fs():","code":"fs(\"exhaustive_search\")"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"control-parameters","dir":"Reference","previous_headings":"","what":"Control Parameters","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"max_features integer(1) Maximum number features. default, number features mlr3::Task.","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"mlr3fselect::FSelector -> FSelectorExhaustiveSearch","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"mlr3fselect::FSelector$format() mlr3fselect::FSelector$help() mlr3fselect::FSelector$optimize() mlr3fselect::FSelector$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"FSelectorExhaustiveSearch$new() FSelectorExhaustiveSearch$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"","code":"FSelectorExhaustiveSearch$new()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"","code":"FSelectorExhaustiveSearch$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_exhaustive_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Selection with Exhaustive Search — mlr_fselectors_exhaustive_search","text":"","code":"# Feature Selection # \\donttest{  # retrieve task and load learner task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")  # run feature selection on the Palmer Penguins data set instance = fselect(   fselector = fs(\"exhaustive_search\"),   task = task,   learner = learner,   resampling = rsmp(\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 10 )  # best performing feature set instance$result #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:      FALSE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #>                      features classif.ce #> 1: bill_length,flipper_length 0.05217391  # all evaluated feature sets as.data.table(instance$archive) #>     bill_depth bill_length body_mass flipper_length island   sex  year #>  1:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #>  2:      FALSE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #>  3:      FALSE       FALSE      TRUE          FALSE  FALSE FALSE FALSE #>  4:      FALSE       FALSE     FALSE           TRUE  FALSE FALSE FALSE #>  5:      FALSE       FALSE     FALSE          FALSE   TRUE FALSE FALSE #>  6:      FALSE       FALSE     FALSE          FALSE  FALSE  TRUE FALSE #>  7:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE  TRUE #>  8:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #>  9:       TRUE       FALSE      TRUE          FALSE  FALSE FALSE FALSE #> 10:       TRUE       FALSE     FALSE           TRUE  FALSE FALSE FALSE #> 11:       TRUE       FALSE     FALSE          FALSE   TRUE FALSE FALSE #> 12:       TRUE       FALSE     FALSE          FALSE  FALSE  TRUE FALSE #> 13:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE  TRUE #> 14:      FALSE        TRUE      TRUE          FALSE  FALSE FALSE FALSE #> 15:      FALSE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #> 16:      FALSE        TRUE     FALSE          FALSE   TRUE FALSE FALSE #> 17:      FALSE        TRUE     FALSE          FALSE  FALSE  TRUE FALSE #> 18:      FALSE        TRUE     FALSE          FALSE  FALSE FALSE  TRUE #> 19:      FALSE       FALSE      TRUE           TRUE  FALSE FALSE FALSE #> 20:      FALSE       FALSE      TRUE          FALSE   TRUE FALSE FALSE #> 21:      FALSE       FALSE      TRUE          FALSE  FALSE  TRUE FALSE #> 22:      FALSE       FALSE      TRUE          FALSE  FALSE FALSE  TRUE #> 23:      FALSE       FALSE     FALSE           TRUE   TRUE FALSE FALSE #> 24:      FALSE       FALSE     FALSE           TRUE  FALSE  TRUE FALSE #> 25:      FALSE       FALSE     FALSE           TRUE  FALSE FALSE  TRUE #> 26:      FALSE       FALSE     FALSE          FALSE   TRUE  TRUE FALSE #> 27:      FALSE       FALSE     FALSE          FALSE   TRUE FALSE  TRUE #> 28:      FALSE       FALSE     FALSE          FALSE  FALSE  TRUE  TRUE #>     bill_depth bill_length body_mass flipper_length island   sex  year #>     classif.ce runtime_learners           timestamp batch_nr warnings errors #>  1: 0.21739130            0.009 2023-03-02 10:47:14        1        0      0 #>  2: 0.26086957            0.009 2023-03-02 10:47:14        1        0      0 #>  3: 0.26086957            0.011 2023-03-02 10:47:14        1        0      0 #>  4: 0.17391304            0.011 2023-03-02 10:47:14        1        0      0 #>  5: 0.25217391            0.010 2023-03-02 10:47:14        1        0      0 #>  6: 0.58260870            0.008 2023-03-02 10:47:14        1        0      0 #>  7: 0.58260870            0.008 2023-03-02 10:47:14        1        0      0 #>  8: 0.14782609            0.011 2023-03-02 10:47:15        2        0      0 #>  9: 0.27826087            0.010 2023-03-02 10:47:15        2        0      0 #> 10: 0.23478261            0.010 2023-03-02 10:47:15        2        0      0 #> 11: 0.22608696            0.010 2023-03-02 10:47:15        2        0      0 #> 12: 0.21739130            0.010 2023-03-02 10:47:15        2        0      0 #> 13: 0.21739130            0.010 2023-03-02 10:47:15        2        0      0 #> 14: 0.12173913            0.010 2023-03-02 10:47:15        2        0      0 #> 15: 0.05217391            0.009 2023-03-02 10:47:15        2        0      0 #> 16: 0.09565217            0.011 2023-03-02 10:47:15        2        0      0 #> 17: 0.26086957            0.011 2023-03-02 10:47:15        2        0      0 #> 18: 0.31304348            0.011 2023-03-02 10:47:15        2        0      0 #> 19: 0.19130435            0.051 2023-03-02 10:47:15        2        0      0 #> 20: 0.23478261            0.014 2023-03-02 10:47:15        2        0      0 #> 21: 0.22608696            0.012 2023-03-02 10:47:15        2        0      0 #> 22: 0.33043478            0.009 2023-03-02 10:47:15        2        0      0 #> 23: 0.12173913            0.010 2023-03-02 10:47:15        2        0      0 #> 24: 0.15652174            0.011 2023-03-02 10:47:15        2        0      0 #> 25: 0.20000000            0.010 2023-03-02 10:47:15        2        0      0 #> 26: 0.25217391            0.011 2023-03-02 10:47:15        2        0      0 #> 27: 0.25217391            0.009 2023-03-02 10:47:15        2        0      0 #> 28: 0.58260870            0.011 2023-03-02 10:47:15        2        0      0 #>     classif.ce runtime_learners           timestamp batch_nr warnings errors #>                       features      resample_result #>  1:                 bill_depth <ResampleResult[21]> #>  2:                bill_length <ResampleResult[21]> #>  3:                  body_mass <ResampleResult[21]> #>  4:             flipper_length <ResampleResult[21]> #>  5:                     island <ResampleResult[21]> #>  6:                        sex <ResampleResult[21]> #>  7:                       year <ResampleResult[21]> #>  8:     bill_depth,bill_length <ResampleResult[21]> #>  9:       bill_depth,body_mass <ResampleResult[21]> #> 10:  bill_depth,flipper_length <ResampleResult[21]> #> 11:          bill_depth,island <ResampleResult[21]> #> 12:             bill_depth,sex <ResampleResult[21]> #> 13:            bill_depth,year <ResampleResult[21]> #> 14:      bill_length,body_mass <ResampleResult[21]> #> 15: bill_length,flipper_length <ResampleResult[21]> #> 16:         bill_length,island <ResampleResult[21]> #> 17:            bill_length,sex <ResampleResult[21]> #> 18:           bill_length,year <ResampleResult[21]> #> 19:   body_mass,flipper_length <ResampleResult[21]> #> 20:           body_mass,island <ResampleResult[21]> #> 21:              body_mass,sex <ResampleResult[21]> #> 22:             body_mass,year <ResampleResult[21]> #> 23:      flipper_length,island <ResampleResult[21]> #> 24:         flipper_length,sex <ResampleResult[21]> #> 25:        flipper_length,year <ResampleResult[21]> #> 26:                 island,sex <ResampleResult[21]> #> 27:                island,year <ResampleResult[21]> #> 28:                   sex,year <ResampleResult[21]> #>                       features      resample_result  # subset the task and fit the final model task$select(instance$result_feature_set) learner$train(task) # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"Feature selection using Genetic Algorithm package genalg.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"FSelector can instantiated associated sugar function fs():","code":"fs(\"genetic_search\")"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"control-parameters","dir":"Reference","previous_headings":"","what":"Control Parameters","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"meaning control parameters, see genalg::rbga.bin(). genalg::rbga.bin() internally terminates iters iteration. set ìters = 100000  allow termination via terminators. iterations needed, set ìters higher value parameter set.","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"mlr3fselect::FSelector -> FSelectorGeneticSearch","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"mlr3fselect::FSelector$format() mlr3fselect::FSelector$help() mlr3fselect::FSelector$optimize() mlr3fselect::FSelector$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"FSelectorGeneticSearch$new() FSelectorGeneticSearch$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"","code":"FSelectorGeneticSearch$new()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"","code":"FSelectorGeneticSearch$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_genetic_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Selection with Genetic Search — mlr_fselectors_genetic_search","text":"","code":"# Feature Selection # \\donttest{  # retrieve task and load learner task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")  # run feature selection on the Palmer Penguins data set instance = fselect(   fselector = fs(\"genetic_search\"),   task = task,   learner = learner,   resampling = rsmp(\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 10 )  # best performing feature set instance$result #>    bill_depth bill_length body_mass flipper_length island   sex year #> 1:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE TRUE #>                       features classif.ce #> 1: bill_depth,bill_length,year  0.1217391  # all evaluated feature sets as.data.table(instance$archive) #>     bill_depth bill_length body_mass flipper_length island   sex  year #>  1:      FALSE       FALSE     FALSE           TRUE  FALSE FALSE FALSE #>  2:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #>  3:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #>  4:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE  TRUE #>  5:      FALSE       FALSE     FALSE          FALSE   TRUE  TRUE FALSE #>  6:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE  TRUE #>  7:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #>  8:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE  TRUE #>  9:      FALSE       FALSE      TRUE          FALSE  FALSE FALSE FALSE #> 10:      FALSE        TRUE     FALSE          FALSE  FALSE  TRUE FALSE #>     classif.ce runtime_learners           timestamp batch_nr warnings errors #>  1:  0.1826087            0.009 2023-03-02 10:47:16        1        0      0 #>  2:  0.1826087            0.014 2023-03-02 10:47:17        2        0      0 #>  3:  0.1826087            0.010 2023-03-02 10:47:17        3        0      0 #>  4:  0.5130435            0.008 2023-03-02 10:47:17        4        0      0 #>  5:  0.3043478            0.011 2023-03-02 10:47:17        5        0      0 #>  6:  0.5130435            0.010 2023-03-02 10:47:17        6        0      0 #>  7:  0.1826087            0.010 2023-03-02 10:47:17        7        0      0 #>  8:  0.1217391            0.011 2023-03-02 10:47:17        8        0      0 #>  9:  0.3478261            0.010 2023-03-02 10:47:17        9        0      0 #> 10:  0.2869565            0.041 2023-03-02 10:47:17       10        0      0 #>                        features      resample_result #>  1:              flipper_length <ResampleResult[21]> #>  2:                  bill_depth <ResampleResult[21]> #>  3:                  bill_depth <ResampleResult[21]> #>  4:                        year <ResampleResult[21]> #>  5:                  island,sex <ResampleResult[21]> #>  6:                        year <ResampleResult[21]> #>  7:                  bill_depth <ResampleResult[21]> #>  8: bill_depth,bill_length,year <ResampleResult[21]> #>  9:                   body_mass <ResampleResult[21]> #> 10:             bill_length,sex <ResampleResult[21]>  # subset the task and fit the final model task$select(instance$result_feature_set) learner$train(task) # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Selection with Random Search — mlr_fselectors_random_search","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"Feature selection using Random Search Algorithm.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"Bergstra J, Bengio Y (2012). “Random Search Hyper-Parameter Optimization.” Journal Machine Learning Research, 13(10), 281--305. https://jmlr.csail.mit.edu/papers/v13/bergstra12a.html.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"feature sets randomly drawn. sets evaluated batches size batch_size. Larger batches mean can parallelize , smaller batches imply fine-grained checking termination criteria.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"FSelector can instantiated associated sugar function fs():","code":"fs(\"random_search\")"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"control-parameters","dir":"Reference","previous_headings":"","what":"Control Parameters","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"max_features integer(1) Maximum number features. default, number features mlr3::Task. batch_size integer(1) Maximum number feature sets try batch.","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"mlr3fselect::FSelector -> FSelectorRandomSearch","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"mlr3fselect::FSelector$format() mlr3fselect::FSelector$help() mlr3fselect::FSelector$optimize() mlr3fselect::FSelector$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"FSelectorRandomSearch$new() FSelectorRandomSearch$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"","code":"FSelectorRandomSearch$new()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"","code":"FSelectorRandomSearch$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_random_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Selection with Random Search — mlr_fselectors_random_search","text":"","code":"# Feature Selection # \\donttest{  # retrieve task and load learner task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")  # run feature selection on the Palmer Penguins data set instance = fselect(   fselector = fs(\"random_search\"),   task = task,   learner = learner,   resampling = rsmp(\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 10 )  # best performing feature subset instance$result #>    bill_depth bill_length body_mass flipper_length island  sex year #> 1:       TRUE        TRUE      TRUE           TRUE   TRUE TRUE TRUE #>                                                          features classif.ce #> 1: bill_depth,bill_length,body_mass,flipper_length,island,sex,... 0.05217391  # all evaluated feature subsets as.data.table(instance$archive) #>     bill_depth bill_length body_mass flipper_length island   sex  year #>  1:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #>  2:       TRUE        TRUE     FALSE           TRUE  FALSE  TRUE  TRUE #>  3:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #>  4:       TRUE        TRUE     FALSE           TRUE   TRUE  TRUE FALSE #>  5:       TRUE       FALSE     FALSE           TRUE  FALSE FALSE  TRUE #>  6:       TRUE        TRUE      TRUE           TRUE  FALSE  TRUE  TRUE #>  7:       TRUE        TRUE     FALSE           TRUE   TRUE  TRUE  TRUE #>  8:      FALSE        TRUE     FALSE           TRUE   TRUE FALSE FALSE #>  9:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #> 10:       TRUE        TRUE     FALSE           TRUE   TRUE  TRUE  TRUE #>     classif.ce runtime_learners           timestamp batch_nr warnings errors #>  1: 0.05217391            0.011 2023-03-02 10:47:18        1        0      0 #>  2: 0.06086957            0.013 2023-03-02 10:47:19        2        0      0 #>  3: 0.05217391            0.011 2023-03-02 10:47:19        3        0      0 #>  4: 0.05217391            0.011 2023-03-02 10:47:19        4        0      0 #>  5: 0.22608696            0.010 2023-03-02 10:47:19        5        0      0 #>  6: 0.06086957            0.013 2023-03-02 10:47:19        6        0      0 #>  7: 0.05217391            0.013 2023-03-02 10:47:19        7        0      0 #>  8: 0.05217391            0.009 2023-03-02 10:47:19        8        0      0 #>  9: 0.05217391            0.011 2023-03-02 10:47:19        9        0      0 #> 10: 0.05217391            0.013 2023-03-02 10:47:19       10        0      0 #>                                                           features #>  1: bill_depth,bill_length,body_mass,flipper_length,island,sex,... #>  2:                 bill_depth,bill_length,flipper_length,sex,year #>  3: bill_depth,bill_length,body_mass,flipper_length,island,sex,... #>  4:               bill_depth,bill_length,flipper_length,island,sex #>  5:                                 bill_depth,flipper_length,year #>  6:       bill_depth,bill_length,body_mass,flipper_length,sex,year #>  7:          bill_depth,bill_length,flipper_length,island,sex,year #>  8:                              bill_length,flipper_length,island #>  9: bill_depth,bill_length,body_mass,flipper_length,island,sex,... #> 10:          bill_depth,bill_length,flipper_length,island,sex,year #>          resample_result #>  1: <ResampleResult[21]> #>  2: <ResampleResult[21]> #>  3: <ResampleResult[21]> #>  4: <ResampleResult[21]> #>  5: <ResampleResult[21]> #>  6: <ResampleResult[21]> #>  7: <ResampleResult[21]> #>  8: <ResampleResult[21]> #>  9: <ResampleResult[21]> #> 10: <ResampleResult[21]>  # subset the task and fit the final model task$select(instance$result_feature_set) learner$train(task) # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"Feature selection using Recursive Feature Elimination (RFE) algorithm. Recursive feature elimination iteratively removes features low importance score. works mlr3::Learners can calculate importance scores (see section optional extractors mlr3::Learner).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"Guyon , Weston J, Barnhill S, Vapnik V (2002). “Gene Selection Cancer Classification using Support Vector Machines.” Machine Learning, 46(1), 389--422. ISSN 1573-0565, doi:10.1023/:1012487302797 .","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"learner trained features start importance scores calculated feature. least important feature removed learner trained reduced feature set. importance scores calculated procedure repeated desired number features reached. non-recursive option (recursive = FALSE) uses importance scores calculated first iteration. feature selection terminates n_features reached. necessary set termination criterion. using cross-validation resampling strategy, importance scores resampling iterations aggregated. parameter aggregation determines importance scores aggregated. default (\"rank\"), importance score vector fold ranked feature lowest average rank removed. option \"mean\" averages score feature across resampling iterations removes feature lowest average score. Averaging scores appropriate importance measures.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"archive","dir":"Reference","previous_headings":"","what":"Archive","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"ArchiveFSelect holds following additional columns: \"importance\" (numeric()) importance score vector feature subset.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"resources","dir":"Reference","previous_headings":"","what":"Resources","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"gallery features collection case studies demos optimization. Utilize built-feature importance models Recursive Feature Elimination.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"FSelector can instantiated associated sugar function fs():","code":"fs(\"rfe\")"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"control-parameters","dir":"Reference","previous_headings":"","what":"Control Parameters","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"n_features integer(1) number features select. default half features selected. feature_fraction double(1) Fraction features retain iteration. default 0.5 retrains half features. feature_number integer(1) Number features remove iteration. subset_sizes integer() Vector number features retain iteration. Must sorted decreasing order. recursive logical(1) TRUE (default), feature importance calculated iteration. aggregation character(1) aggregation method importance scores resampling iterations. See details. parameter feature_fraction, feature_number subset_sizes mutually exclusive.","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"mlr3fselect::FSelector -> FSelectorRFE","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"mlr3fselect::FSelector$format() mlr3fselect::FSelector$help() mlr3fselect::FSelector$optimize() mlr3fselect::FSelector$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"FSelectorRFE$new() FSelectorRFE$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"","code":"FSelectorRFE$new()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"","code":"FSelectorRFE$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Selection with Recursive Feature Elimination — mlr_fselectors_rfe","text":"","code":"# Feature Selection # \\donttest{  # retrieve task and load learner task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")  # run feature selection on the Palmer Penguins data set instance = fselect(   fselector = fs(\"rfe\"),   task = task,   learner = learner,   resampling = rsmp(\"holdout\"),   measure = msr(\"classif.ce\"),   store_models = TRUE )  # best performing feature subset instance$result #>    bill_depth bill_length body_mass flipper_length island  sex year #> 1:       TRUE        TRUE      TRUE           TRUE   TRUE TRUE TRUE #>                                                          features classif.ce #> 1: bill_depth,bill_length,body_mass,flipper_length,island,sex,... 0.06086957  # all evaluated feature subsets as.data.table(instance$archive) #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #> 2:       TRUE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #>    classif.ce runtime_learners           timestamp batch_nr warnings errors #> 1: 0.06086957            0.046 2023-03-02 10:47:20        1        0      0 #> 2: 0.06956522            0.010 2023-03-02 10:47:20        2        0      0 #>         importance #> 1: 7,6,5,4,3,2,... #> 2:           3,2,1 #>                                                          features #> 1: bill_depth,bill_length,body_mass,flipper_length,island,sex,... #> 2:                          bill_depth,bill_length,flipper_length #>         resample_result #> 1: <ResampleResult[21]> #> 2: <ResampleResult[21]>  # subset the task and fit the final model task$select(instance$result_feature_set) learner$train(task) # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"Feature selection using Recursive Feature Elimination Cross-Validation (RFE-CV) algorithm. See FSelectorRFE description base algorithm. RFE-CV runs recursive feature elimination iteration cross-validation determine optimal number features. recursive feature elimination run complete dataset optimal number features final feature set size. performance optimal feature set calculated complete data set reported performance final model. works mlr3::Learners can calculate importance scores (see section optional extractors mlr3::Learner).","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"resampling strategy changed feature selection. resampling strategy passed instance (resampling) used determine optimal number features. Usually, cross-validation strategy used recursive feature elimination run iteration cross-validation. Internally, mlr3::ResamplingCustom used emulate part algorithm. final recursive feature elimination run resampling strategy changed mlr3::ResamplingInsample .e. complete data set used training testing. feature selection terminates optimal number features reached. necessary set termination criterion.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"archive","dir":"Reference","previous_headings":"","what":"Archive","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"ArchiveFSelect holds following additional columns: \"iteration\" (integer(1)) resampling iteration feature subset evaluated. \"importance\" (numeric()) importance score vector feature subset.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"resources","dir":"Reference","previous_headings":"","what":"Resources","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"gallery features collection case studies demos optimization. Utilize built-feature importance models Recursive Feature Elimination.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"FSelector can instantiated associated sugar function fs():","code":"fs(\"rfe\")"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"control-parameters","dir":"Reference","previous_headings":"","what":"Control Parameters","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"n_features integer(1) number features select. default half features selected. feature_fraction double(1) Fraction features retain iteration. default 0.5 retrains half features. feature_number integer(1) Number features remove iteration. subset_sizes integer() Vector number features retain iteration. Must sorted decreasing order. recursive logical(1) TRUE (default), feature importance calculated iteration. parameter feature_fraction, feature_number subset_sizes mutually exclusive.","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"mlr3fselect::FSelector -> FSelectorRFECV","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"mlr3fselect::FSelector$format() mlr3fselect::FSelector$help() mlr3fselect::FSelector$optimize() mlr3fselect::FSelector$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"FSelectorRFECV$new() FSelectorRFECV$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"","code":"FSelectorRFECV$new()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"","code":"FSelectorRFECV$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_rfecv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Selection with Recursive Feature Elimination with Cross Validation — mlr_fselectors_rfecv","text":"","code":"# Feature Selection # \\donttest{  # retrieve task and load learner task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")  # run feature selection on the Palmer Penguins data set instance = fselect(   fselector = fs(\"rfecv\"),   task = task,   learner = learner,   resampling = rsmp(\"cv\", folds = 3),   measure = msr(\"classif.ce\"),   store_models = TRUE )  # best performing feature subset instance$result #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:       TRUE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #>                                 features classif.ce #> 1: bill_depth,bill_length,flipper_length  0.0377907  # all evaluated feature subsets as.data.table(instance$archive) #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #> 2:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #> 3:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #> 4:       TRUE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #> 5:       TRUE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #> 6:       TRUE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #> 7:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE  TRUE #> 8:       TRUE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #>    classif.ce runtime_learners           timestamp batch_nr warnings errors #> 1: 0.06086957            0.012 2023-03-02 10:47:22        1        0      0 #> 2: 0.06086957            0.014 2023-03-02 10:47:22        1        0      0 #> 3: 0.07017544            0.011 2023-03-02 10:47:22        1        0      0 #> 4: 0.06086957            0.009 2023-03-02 10:47:22        2        0      0 #> 5: 0.06086957            0.008 2023-03-02 10:47:22        2        0      0 #> 6: 0.07894737            0.010 2023-03-02 10:47:22        2        0      0 #> 7: 0.03488372            0.014 2023-03-02 10:47:22        3        0      0 #> 8: 0.03779070            0.011 2023-03-02 10:47:22        4        0      0 #>                                                         importance iteration #> 1:       89.01264,83.01242,62.74110,59.82204,49.82491, 0.00000,...         1 #> 2:       81.50667,78.15413,64.55298,51.82422,44.74670, 0.00000,...         2 #> 3:       83.91302,82.31052,63.61021,62.72673,50.22454, 0.00000,...         3 #> 4:                                      89.01264,83.01242,62.74110         1 #> 5:                                      81.50667,78.15413,64.55298         2 #> 6:                                      83.91302,82.31052,63.61021         3 #> 7: 124.20793,121.52400,102.74919, 87.26186, 78.61700,  0.00000,...        NA #> 8:                                      124.2079,121.5240,104.2507        NA #>                                                          features #> 1: bill_depth,bill_length,body_mass,flipper_length,island,sex,... #> 2: bill_depth,bill_length,body_mass,flipper_length,island,sex,... #> 3: bill_depth,bill_length,body_mass,flipper_length,island,sex,... #> 4:                          bill_depth,bill_length,flipper_length #> 5:                          bill_depth,bill_length,flipper_length #> 6:                          bill_depth,bill_length,flipper_length #> 7: bill_depth,bill_length,body_mass,flipper_length,island,sex,... #> 8:                          bill_depth,bill_length,flipper_length #>         resample_result #> 1: <ResampleResult[21]> #> 2: <ResampleResult[21]> #> 3: <ResampleResult[21]> #> 4: <ResampleResult[21]> #> 5: <ResampleResult[21]> #> 6: <ResampleResult[21]> #> 7: <ResampleResult[21]> #> 8: <ResampleResult[21]>  # subset the task and fit the final model task$select(instance$result_feature_set) learner$train(task) # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Selection with Sequential Search — mlr_fselectors_sequential","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"Feature selection using Sequential Search Algorithm.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"Sequential forward selection (strategy = fsf) extends feature set iteration feature increases model's performance . Sequential backward selection (strategy = fsb) follows idea starts features removes features set. feature selection terminates min_features max_features reached. necessary set termination criterion.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"FSelector can instantiated associated sugar function fs():","code":"fs(\"sequential\")"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"control-parameters","dir":"Reference","previous_headings":"","what":"Control Parameters","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"min_features integer(1) Minimum number features. default, 1. max_features integer(1) Maximum number features. default, number features mlr3::Task. strategy character(1) Search method sfs (forward search) sbs (backward search).","code":""},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"mlr3fselect::FSelector -> FSelectorSequential","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"mlr3fselect::FSelector$format() mlr3fselect::FSelector$help() mlr3fselect::FSelector$optimize() mlr3fselect::FSelector$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"FSelectorSequential$new() FSelectorSequential$optimization_path() FSelectorSequential$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"Creates new instance R6 class.`","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"","code":"FSelectorSequential$new()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"method-optimization-path-","dir":"Reference","previous_headings":"","what":"Method optimization_path()","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"Returns optimization path.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"","code":"FSelectorSequential$optimization_path(inst, include_uhash = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"inst (FSelectInstanceSingleCrit) Instance optimized FSelectorSequential. include_uhash (logical(1)) Include uhash column?","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"data.table::data.table()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"","code":"FSelectorSequential$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_sequential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Selection with Sequential Search — mlr_fselectors_sequential","text":"","code":"# Feature Selection # \\donttest{  # retrieve task and load learner task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")  # run feature selection on the Palmer Penguins data set instance = fselect(   fselector = fs(\"sequential\"),   task = task,   learner = learner,   resampling = rsmp(\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 10 )  # best performing feature set instance$result #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:      FALSE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #>                      features classif.ce #> 1: bill_length,flipper_length 0.05217391  # all evaluated feature sets as.data.table(instance$archive) #>     bill_depth bill_length body_mass flipper_length island   sex  year #>  1:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #>  2:      FALSE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #>  3:      FALSE       FALSE      TRUE          FALSE  FALSE FALSE FALSE #>  4:      FALSE       FALSE     FALSE           TRUE  FALSE FALSE FALSE #>  5:      FALSE       FALSE     FALSE          FALSE   TRUE FALSE FALSE #>  6:      FALSE       FALSE     FALSE          FALSE  FALSE  TRUE FALSE #>  7:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE  TRUE #>  8:       TRUE       FALSE     FALSE           TRUE  FALSE FALSE FALSE #>  9:      FALSE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #> 10:      FALSE       FALSE      TRUE           TRUE  FALSE FALSE FALSE #> 11:      FALSE       FALSE     FALSE           TRUE   TRUE FALSE FALSE #> 12:      FALSE       FALSE     FALSE           TRUE  FALSE  TRUE FALSE #> 13:      FALSE       FALSE     FALSE           TRUE  FALSE FALSE  TRUE #>     classif.ce runtime_learners           timestamp batch_nr warnings errors #>  1: 0.22608696            0.010 2023-03-02 10:47:24        1        0      0 #>  2: 0.21739130            0.009 2023-03-02 10:47:24        1        0      0 #>  3: 0.29565217            0.010 2023-03-02 10:47:24        1        0      0 #>  4: 0.19130435            0.012 2023-03-02 10:47:24        1        0      0 #>  5: 0.31304348            0.014 2023-03-02 10:47:24        1        0      0 #>  6: 0.53043478            0.012 2023-03-02 10:47:24        1        0      0 #>  7: 0.53043478            0.009 2023-03-02 10:47:24        1        0      0 #>  8: 0.19130435            0.010 2023-03-02 10:47:24        2        0      0 #>  9: 0.05217391            0.018 2023-03-02 10:47:24        2        0      0 #> 10: 0.19130435            0.012 2023-03-02 10:47:24        2        0      0 #> 11: 0.13043478            0.011 2023-03-02 10:47:24        2        0      0 #> 12: 0.19130435            0.012 2023-03-02 10:47:24        2        0      0 #> 13: 0.19130435            0.010 2023-03-02 10:47:24        2        0      0 #>                       features      resample_result #>  1:                 bill_depth <ResampleResult[21]> #>  2:                bill_length <ResampleResult[21]> #>  3:                  body_mass <ResampleResult[21]> #>  4:             flipper_length <ResampleResult[21]> #>  5:                     island <ResampleResult[21]> #>  6:                        sex <ResampleResult[21]> #>  7:                       year <ResampleResult[21]> #>  8:  bill_depth,flipper_length <ResampleResult[21]> #>  9: bill_length,flipper_length <ResampleResult[21]> #> 10:   body_mass,flipper_length <ResampleResult[21]> #> 11:      flipper_length,island <ResampleResult[21]> #> 12:         flipper_length,sex <ResampleResult[21]> #> 13:        flipper_length,year <ResampleResult[21]>  # subset the task and fit the final model task$select(instance$result_feature_set) learner$train(task) # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"Feature selection using Shadow Variable Search Algorithm. Shadow variable search creates feature permutated copy stops one selected.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"Thomas J, Hepp T, Mayr , Bischl B (2017). “Probing Sparse Fast Variable Selection Model-Based Boosting.” Computational Mathematical Methods Medicine, 2017, 1--8. doi:10.1155/2017/1421409 . Wu Y, Boos DD, Stefanski LA (2007). “Controlling Variable Selection Addition Pseudovariables.” Journal American Statistical Association, 102(477), 235--243. doi:10.1198/016214506000000843 .","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"feature selection terminates first shadow variable selected. necessary set termination criterion.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"resources","dir":"Reference","previous_headings":"","what":"Resources","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"gallery features collection case studies demos optimization. Run feature selection Shadow Variable Search.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"FSelector can instantiated associated sugar function fs():","code":"fs(\"shadow_variable_search\")"},{"path":[]},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"mlr3fselect::FSelector -> FSelectorShadowVariableSearch","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"mlr3fselect::FSelector$format() mlr3fselect::FSelector$help() mlr3fselect::FSelector$optimize() mlr3fselect::FSelector$print()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"FSelectorShadowVariableSearch$new() FSelectorShadowVariableSearch$optimization_path() FSelectorShadowVariableSearch$clone()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"Creates new instance R6 class.`","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"","code":"FSelectorShadowVariableSearch$new()"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"method-optimization-path-","dir":"Reference","previous_headings":"","what":"Method optimization_path()","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"Returns optimization path.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"","code":"FSelectorShadowVariableSearch$optimization_path(inst)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"inst (FSelectInstanceSingleCrit) Instance optimized FSelectorShadowVariableSearch.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"data.table::data.table","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"","code":"FSelectorShadowVariableSearch$clone(deep = FALSE)"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/mlr_fselectors_shadow_variable_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Selection with Shadow Variable Search — mlr_fselectors_shadow_variable_search","text":"","code":"# Feature Selection # \\donttest{  # retrieve task and load learner task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")  # run feature selection on the Palmer Penguins data set instance = fselect(   fselector = fs(\"shadow_variable_search\"),   task = task,   learner = learner,   resampling = rsmp(\"holdout\"),   measure = msr(\"classif.ce\"), )  # best performing feature subset instance$result #>    bill_depth bill_length body_mass flipper_length island   sex  year #> 1:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE FALSE #>                            features classif.ce #> 1: bill_depth,bill_length,body_mass 0.03478261  # all evaluated feature subsets as.data.table(instance$archive) #>     bill_depth bill_length body_mass flipper_length island   sex  year #>  1:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #>  2:      FALSE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #>  3:      FALSE       FALSE      TRUE          FALSE  FALSE FALSE FALSE #>  4:      FALSE       FALSE     FALSE           TRUE  FALSE FALSE FALSE #>  5:      FALSE       FALSE     FALSE          FALSE   TRUE FALSE FALSE #>  6:      FALSE       FALSE     FALSE          FALSE  FALSE  TRUE FALSE #>  7:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE  TRUE #>  8:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #>  9:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 10:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 11:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 12:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 13:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 14:      FALSE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 15:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #> 16:       TRUE       FALSE      TRUE          FALSE  FALSE FALSE FALSE #> 17:       TRUE       FALSE     FALSE           TRUE  FALSE FALSE FALSE #> 18:       TRUE       FALSE     FALSE          FALSE   TRUE FALSE FALSE #> 19:       TRUE       FALSE     FALSE          FALSE  FALSE  TRUE FALSE #> 20:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE  TRUE #> 21:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 22:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 23:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 24:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 25:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 26:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 27:       TRUE       FALSE     FALSE          FALSE  FALSE FALSE FALSE #> 28:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE FALSE #> 29:       TRUE        TRUE     FALSE           TRUE  FALSE FALSE FALSE #> 30:       TRUE        TRUE     FALSE          FALSE   TRUE FALSE FALSE #> 31:       TRUE        TRUE     FALSE          FALSE  FALSE  TRUE FALSE #> 32:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE  TRUE #> 33:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #> 34:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #> 35:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #> 36:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #> 37:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #> 38:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #> 39:       TRUE        TRUE     FALSE          FALSE  FALSE FALSE FALSE #> 40:       TRUE        TRUE      TRUE           TRUE  FALSE FALSE FALSE #> 41:       TRUE        TRUE      TRUE          FALSE   TRUE FALSE FALSE #> 42:       TRUE        TRUE      TRUE          FALSE  FALSE  TRUE FALSE #> 43:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE  TRUE #> 44:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE FALSE #> 45:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE FALSE #> 46:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE FALSE #> 47:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE FALSE #> 48:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE FALSE #> 49:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE FALSE #> 50:       TRUE        TRUE      TRUE          FALSE  FALSE FALSE FALSE #> 51:       TRUE        TRUE      TRUE           TRUE   TRUE FALSE FALSE #> 52:       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE FALSE #> 53:       TRUE        TRUE      TRUE          FALSE   TRUE FALSE  TRUE #> 54:       TRUE        TRUE      TRUE          FALSE   TRUE FALSE FALSE #> 55:       TRUE        TRUE      TRUE          FALSE   TRUE FALSE FALSE #> 56:       TRUE        TRUE      TRUE          FALSE   TRUE FALSE FALSE #> 57:       TRUE        TRUE      TRUE          FALSE   TRUE FALSE FALSE #> 58:       TRUE        TRUE      TRUE          FALSE   TRUE FALSE FALSE #> 59:       TRUE        TRUE      TRUE          FALSE   TRUE FALSE FALSE #> 60:       TRUE        TRUE      TRUE          FALSE   TRUE FALSE FALSE #> 61:       TRUE        TRUE      TRUE           TRUE   TRUE  TRUE FALSE #> 62:       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE  TRUE #> 63:       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE FALSE #> 64:       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE FALSE #> 65:       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE FALSE #> 66:       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE FALSE #> 67:       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE FALSE #> 68:       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE FALSE #> 69:       TRUE        TRUE      TRUE          FALSE   TRUE  TRUE FALSE #>     bill_depth bill_length body_mass flipper_length island   sex  year #>     classif.ce runtime_learners           timestamp batch_nr #>  1: 0.22608696            0.033 2023-03-02 10:47:26        1 #>  2: 0.23478261            0.027 2023-03-02 10:47:26        1 #>  3: 0.26086957            0.024 2023-03-02 10:47:26        1 #>  4: 0.26086957            0.027 2023-03-02 10:47:26        1 #>  5: 0.28695652            0.026 2023-03-02 10:47:26        1 #>  6: 0.55652174            0.025 2023-03-02 10:47:26        1 #>  7: 0.55652174            0.026 2023-03-02 10:47:26        1 #>  8: 0.53913043            0.059 2023-03-02 10:47:26        1 #>  9: 0.70434783            0.028 2023-03-02 10:47:26        1 #> 10: 0.60869565            0.025 2023-03-02 10:47:26        1 #> 11: 0.53913043            0.022 2023-03-02 10:47:26        1 #> 12: 0.57391304            0.025 2023-03-02 10:47:26        1 #> 13: 0.55652174            0.023 2023-03-02 10:47:26        1 #> 14: 0.55652174            0.021 2023-03-02 10:47:26        1 #> 15: 0.06086957            0.025 2023-03-02 10:47:27        2 #> 16: 0.21739130            0.030 2023-03-02 10:47:27        2 #> 17: 0.23478261            0.030 2023-03-02 10:47:27        2 #> 18: 0.20000000            0.026 2023-03-02 10:47:27        2 #> 19: 0.22608696            0.027 2023-03-02 10:47:27        2 #> 20: 0.22608696            0.028 2023-03-02 10:47:27        2 #> 21: 0.22608696            0.026 2023-03-02 10:47:27        2 #> 22: 0.22608696            0.026 2023-03-02 10:47:27        2 #> 23: 0.22608696            0.025 2023-03-02 10:47:27        2 #> 24: 0.22608696            0.032 2023-03-02 10:47:27        2 #> 25: 0.22608696            0.030 2023-03-02 10:47:27        2 #> 26: 0.22608696            0.030 2023-03-02 10:47:27        2 #> 27: 0.23478261            0.026 2023-03-02 10:47:27        2 #> 28: 0.03478261            0.028 2023-03-02 10:47:28        3 #> 29: 0.07826087            0.028 2023-03-02 10:47:28        3 #> 30: 0.03478261            0.027 2023-03-02 10:47:28        3 #> 31: 0.06086957            0.031 2023-03-02 10:47:28        3 #> 32: 0.06086957            0.063 2023-03-02 10:47:28        3 #> 33: 0.06086957            0.032 2023-03-02 10:47:28        3 #> 34: 0.06086957            0.030 2023-03-02 10:47:28        3 #> 35: 0.06956522            0.027 2023-03-02 10:47:28        3 #> 36: 0.06086957            0.026 2023-03-02 10:47:28        3 #> 37: 0.06086957            0.029 2023-03-02 10:47:28        3 #> 38: 0.06086957            0.030 2023-03-02 10:47:28        3 #> 39: 0.06956522            0.027 2023-03-02 10:47:28        3 #> 40: 0.07826087            0.025 2023-03-02 10:47:29        4 #> 41: 0.03478261            0.057 2023-03-02 10:47:29        4 #> 42: 0.03478261            0.035 2023-03-02 10:47:29        4 #> 43: 0.03478261            0.034 2023-03-02 10:47:29        4 #> 44: 0.03478261            0.026 2023-03-02 10:47:29        4 #> 45: 0.03478261            0.028 2023-03-02 10:47:29        4 #> 46: 0.04347826            0.026 2023-03-02 10:47:29        4 #> 47: 0.03478261            0.025 2023-03-02 10:47:29        4 #> 48: 0.03478261            0.025 2023-03-02 10:47:29        4 #> 49: 0.03478261            0.029 2023-03-02 10:47:29        4 #> 50: 0.04347826            0.033 2023-03-02 10:47:29        4 #> 51: 0.06956522            0.034 2023-03-02 10:47:30        5 #> 52: 0.03478261            0.034 2023-03-02 10:47:30        5 #> 53: 0.03478261            0.026 2023-03-02 10:47:30        5 #> 54: 0.03478261            0.031 2023-03-02 10:47:30        5 #> 55: 0.03478261            0.028 2023-03-02 10:47:30        5 #> 56: 0.03478261            0.029 2023-03-02 10:47:30        5 #> 57: 0.03478261            0.029 2023-03-02 10:47:30        5 #> 58: 0.03478261            0.067 2023-03-02 10:47:30        5 #> 59: 0.03478261            0.040 2023-03-02 10:47:30        5 #> 60: 0.03478261            0.033 2023-03-02 10:47:30        5 #> 61: 0.06956522            0.033 2023-03-02 10:47:31        6 #> 62: 0.03478261            0.031 2023-03-02 10:47:31        6 #> 63: 0.03478261            0.026 2023-03-02 10:47:31        6 #> 64: 0.03478261            0.027 2023-03-02 10:47:31        6 #> 65: 0.03478261            0.028 2023-03-02 10:47:31        6 #> 66: 0.03478261            0.027 2023-03-02 10:47:31        6 #> 67: 0.03478261            0.058 2023-03-02 10:47:31        6 #> 68: 0.03478261            0.033 2023-03-02 10:47:31        6 #> 69: 0.03478261            0.027 2023-03-02 10:47:31        6 #>     classif.ce runtime_learners           timestamp batch_nr #>     permuted__bill_depth permuted__bill_length permuted__body_mass #>  1:                FALSE                 FALSE               FALSE #>  2:                FALSE                 FALSE               FALSE #>  3:                FALSE                 FALSE               FALSE #>  4:                FALSE                 FALSE               FALSE #>  5:                FALSE                 FALSE               FALSE #>  6:                FALSE                 FALSE               FALSE #>  7:                FALSE                 FALSE               FALSE #>  8:                 TRUE                 FALSE               FALSE #>  9:                FALSE                  TRUE               FALSE #> 10:                FALSE                 FALSE                TRUE #> 11:                FALSE                 FALSE               FALSE #> 12:                FALSE                 FALSE               FALSE #> 13:                FALSE                 FALSE               FALSE #> 14:                FALSE                 FALSE               FALSE #> 15:                FALSE                 FALSE               FALSE #> 16:                FALSE                 FALSE               FALSE #> 17:                FALSE                 FALSE               FALSE #> 18:                FALSE                 FALSE               FALSE #> 19:                FALSE                 FALSE               FALSE #> 20:                FALSE                 FALSE               FALSE #> 21:                 TRUE                 FALSE               FALSE #> 22:                FALSE                  TRUE               FALSE #> 23:                FALSE                 FALSE                TRUE #> 24:                FALSE                 FALSE               FALSE #> 25:                FALSE                 FALSE               FALSE #> 26:                FALSE                 FALSE               FALSE #> 27:                FALSE                 FALSE               FALSE #> 28:                FALSE                 FALSE               FALSE #> 29:                FALSE                 FALSE               FALSE #> 30:                FALSE                 FALSE               FALSE #> 31:                FALSE                 FALSE               FALSE #> 32:                FALSE                 FALSE               FALSE #> 33:                 TRUE                 FALSE               FALSE #> 34:                FALSE                  TRUE               FALSE #> 35:                FALSE                 FALSE                TRUE #> 36:                FALSE                 FALSE               FALSE #> 37:                FALSE                 FALSE               FALSE #> 38:                FALSE                 FALSE               FALSE #> 39:                FALSE                 FALSE               FALSE #> 40:                FALSE                 FALSE               FALSE #> 41:                FALSE                 FALSE               FALSE #> 42:                FALSE                 FALSE               FALSE #> 43:                FALSE                 FALSE               FALSE #> 44:                 TRUE                 FALSE               FALSE #> 45:                FALSE                  TRUE               FALSE #> 46:                FALSE                 FALSE                TRUE #> 47:                FALSE                 FALSE               FALSE #> 48:                FALSE                 FALSE               FALSE #> 49:                FALSE                 FALSE               FALSE #> 50:                FALSE                 FALSE               FALSE #> 51:                FALSE                 FALSE               FALSE #> 52:                FALSE                 FALSE               FALSE #> 53:                FALSE                 FALSE               FALSE #> 54:                 TRUE                 FALSE               FALSE #> 55:                FALSE                  TRUE               FALSE #> 56:                FALSE                 FALSE                TRUE #> 57:                FALSE                 FALSE               FALSE #> 58:                FALSE                 FALSE               FALSE #> 59:                FALSE                 FALSE               FALSE #> 60:                FALSE                 FALSE               FALSE #> 61:                FALSE                 FALSE               FALSE #> 62:                FALSE                 FALSE               FALSE #> 63:                 TRUE                 FALSE               FALSE #> 64:                FALSE                  TRUE               FALSE #> 65:                FALSE                 FALSE                TRUE #> 66:                FALSE                 FALSE               FALSE #> 67:                FALSE                 FALSE               FALSE #> 68:                FALSE                 FALSE               FALSE #> 69:                FALSE                 FALSE               FALSE #>     permuted__bill_depth permuted__bill_length permuted__body_mass #>     permuted__flipper_length permuted__island permuted__sex permuted__year #>  1:                    FALSE            FALSE         FALSE          FALSE #>  2:                    FALSE            FALSE         FALSE          FALSE #>  3:                    FALSE            FALSE         FALSE          FALSE #>  4:                    FALSE            FALSE         FALSE          FALSE #>  5:                    FALSE            FALSE         FALSE          FALSE #>  6:                    FALSE            FALSE         FALSE          FALSE #>  7:                    FALSE            FALSE         FALSE          FALSE #>  8:                    FALSE            FALSE         FALSE          FALSE #>  9:                    FALSE            FALSE         FALSE          FALSE #> 10:                    FALSE            FALSE         FALSE          FALSE #> 11:                     TRUE            FALSE         FALSE          FALSE #> 12:                    FALSE             TRUE         FALSE          FALSE #> 13:                    FALSE            FALSE          TRUE          FALSE #> 14:                    FALSE            FALSE         FALSE           TRUE #> 15:                    FALSE            FALSE         FALSE          FALSE #> 16:                    FALSE            FALSE         FALSE          FALSE #> 17:                    FALSE            FALSE         FALSE          FALSE #> 18:                    FALSE            FALSE         FALSE          FALSE #> 19:                    FALSE            FALSE         FALSE          FALSE #> 20:                    FALSE            FALSE         FALSE          FALSE #> 21:                    FALSE            FALSE         FALSE          FALSE #> 22:                    FALSE            FALSE         FALSE          FALSE #> 23:                    FALSE            FALSE         FALSE          FALSE #> 24:                     TRUE            FALSE         FALSE          FALSE #> 25:                    FALSE             TRUE         FALSE          FALSE #> 26:                    FALSE            FALSE          TRUE          FALSE #> 27:                    FALSE            FALSE         FALSE           TRUE #> 28:                    FALSE            FALSE         FALSE          FALSE #> 29:                    FALSE            FALSE         FALSE          FALSE #> 30:                    FALSE            FALSE         FALSE          FALSE #> 31:                    FALSE            FALSE         FALSE          FALSE #> 32:                    FALSE            FALSE         FALSE          FALSE #> 33:                    FALSE            FALSE         FALSE          FALSE #> 34:                    FALSE            FALSE         FALSE          FALSE #> 35:                    FALSE            FALSE         FALSE          FALSE #> 36:                     TRUE            FALSE         FALSE          FALSE #> 37:                    FALSE             TRUE         FALSE          FALSE #> 38:                    FALSE            FALSE          TRUE          FALSE #> 39:                    FALSE            FALSE         FALSE           TRUE #> 40:                    FALSE            FALSE         FALSE          FALSE #> 41:                    FALSE            FALSE         FALSE          FALSE #> 42:                    FALSE            FALSE         FALSE          FALSE #> 43:                    FALSE            FALSE         FALSE          FALSE #> 44:                    FALSE            FALSE         FALSE          FALSE #> 45:                    FALSE            FALSE         FALSE          FALSE #> 46:                    FALSE            FALSE         FALSE          FALSE #> 47:                     TRUE            FALSE         FALSE          FALSE #> 48:                    FALSE             TRUE         FALSE          FALSE #> 49:                    FALSE            FALSE          TRUE          FALSE #> 50:                    FALSE            FALSE         FALSE           TRUE #> 51:                    FALSE            FALSE         FALSE          FALSE #> 52:                    FALSE            FALSE         FALSE          FALSE #> 53:                    FALSE            FALSE         FALSE          FALSE #> 54:                    FALSE            FALSE         FALSE          FALSE #> 55:                    FALSE            FALSE         FALSE          FALSE #> 56:                    FALSE            FALSE         FALSE          FALSE #> 57:                     TRUE            FALSE         FALSE          FALSE #> 58:                    FALSE             TRUE         FALSE          FALSE #> 59:                    FALSE            FALSE          TRUE          FALSE #> 60:                    FALSE            FALSE         FALSE           TRUE #> 61:                    FALSE            FALSE         FALSE          FALSE #> 62:                    FALSE            FALSE         FALSE          FALSE #> 63:                    FALSE            FALSE         FALSE          FALSE #> 64:                    FALSE            FALSE         FALSE          FALSE #> 65:                    FALSE            FALSE         FALSE          FALSE #> 66:                     TRUE            FALSE         FALSE          FALSE #> 67:                    FALSE             TRUE         FALSE          FALSE #> 68:                    FALSE            FALSE          TRUE          FALSE #> 69:                    FALSE            FALSE         FALSE           TRUE #>     permuted__flipper_length permuted__island permuted__sex permuted__year #>     warnings errors                                                   features #>  1:        0      0                                                 bill_depth #>  2:        0      0                                                bill_length #>  3:        0      0                                                  body_mass #>  4:        0      0                                             flipper_length #>  5:        0      0                                                     island #>  6:        0      0                                                        sex #>  7:        0      0                                                       year #>  8:        0      0                                                            #>  9:        0      0                                                            #> 10:        0      0                                                            #> 11:        0      0                                                            #> 12:        0      0                                                            #> 13:        0      0                                                            #> 14:        0      0                                                            #> 15:        0      0                                     bill_depth,bill_length #> 16:        0      0                                       bill_depth,body_mass #> 17:        0      0                                  bill_depth,flipper_length #> 18:        0      0                                          bill_depth,island #> 19:        0      0                                             bill_depth,sex #> 20:        0      0                                            bill_depth,year #> 21:        0      0                                                 bill_depth #> 22:        0      0                                                 bill_depth #> 23:        0      0                                                 bill_depth #> 24:        0      0                                                 bill_depth #> 25:        0      0                                                 bill_depth #> 26:        0      0                                                 bill_depth #> 27:        0      0                                                 bill_depth #> 28:        0      0                           bill_depth,bill_length,body_mass #> 29:        0      0                      bill_depth,bill_length,flipper_length #> 30:        0      0                              bill_depth,bill_length,island #> 31:        0      0                                 bill_depth,bill_length,sex #> 32:        0      0                                bill_depth,bill_length,year #> 33:        0      0                                     bill_depth,bill_length #> 34:        0      0                                     bill_depth,bill_length #> 35:        0      0                                     bill_depth,bill_length #> 36:        0      0                                     bill_depth,bill_length #> 37:        0      0                                     bill_depth,bill_length #> 38:        0      0                                     bill_depth,bill_length #> 39:        0      0                                     bill_depth,bill_length #> 40:        0      0            bill_depth,bill_length,body_mass,flipper_length #> 41:        0      0                    bill_depth,bill_length,body_mass,island #> 42:        0      0                       bill_depth,bill_length,body_mass,sex #> 43:        0      0                      bill_depth,bill_length,body_mass,year #> 44:        0      0                           bill_depth,bill_length,body_mass #> 45:        0      0                           bill_depth,bill_length,body_mass #> 46:        0      0                           bill_depth,bill_length,body_mass #> 47:        0      0                           bill_depth,bill_length,body_mass #> 48:        0      0                           bill_depth,bill_length,body_mass #> 49:        0      0                           bill_depth,bill_length,body_mass #> 50:        0      0                           bill_depth,bill_length,body_mass #> 51:        0      0     bill_depth,bill_length,body_mass,flipper_length,island #> 52:        0      0                bill_depth,bill_length,body_mass,island,sex #> 53:        0      0               bill_depth,bill_length,body_mass,island,year #> 54:        0      0                    bill_depth,bill_length,body_mass,island #> 55:        0      0                    bill_depth,bill_length,body_mass,island #> 56:        0      0                    bill_depth,bill_length,body_mass,island #> 57:        0      0                    bill_depth,bill_length,body_mass,island #> 58:        0      0                    bill_depth,bill_length,body_mass,island #> 59:        0      0                    bill_depth,bill_length,body_mass,island #> 60:        0      0                    bill_depth,bill_length,body_mass,island #> 61:        0      0 bill_depth,bill_length,body_mass,flipper_length,island,sex #> 62:        0      0           bill_depth,bill_length,body_mass,island,sex,year #> 63:        0      0                bill_depth,bill_length,body_mass,island,sex #> 64:        0      0                bill_depth,bill_length,body_mass,island,sex #> 65:        0      0                bill_depth,bill_length,body_mass,island,sex #> 66:        0      0                bill_depth,bill_length,body_mass,island,sex #> 67:        0      0                bill_depth,bill_length,body_mass,island,sex #> 68:        0      0                bill_depth,bill_length,body_mass,island,sex #> 69:        0      0                bill_depth,bill_length,body_mass,island,sex #>     warnings errors                                                   features #>          resample_result #>  1: <ResampleResult[21]> #>  2: <ResampleResult[21]> #>  3: <ResampleResult[21]> #>  4: <ResampleResult[21]> #>  5: <ResampleResult[21]> #>  6: <ResampleResult[21]> #>  7: <ResampleResult[21]> #>  8: <ResampleResult[21]> #>  9: <ResampleResult[21]> #> 10: <ResampleResult[21]> #> 11: <ResampleResult[21]> #> 12: <ResampleResult[21]> #> 13: <ResampleResult[21]> #> 14: <ResampleResult[21]> #> 15: <ResampleResult[21]> #> 16: <ResampleResult[21]> #> 17: <ResampleResult[21]> #> 18: <ResampleResult[21]> #> 19: <ResampleResult[21]> #> 20: <ResampleResult[21]> #> 21: <ResampleResult[21]> #> 22: <ResampleResult[21]> #> 23: <ResampleResult[21]> #> 24: <ResampleResult[21]> #> 25: <ResampleResult[21]> #> 26: <ResampleResult[21]> #> 27: <ResampleResult[21]> #> 28: <ResampleResult[21]> #> 29: <ResampleResult[21]> #> 30: <ResampleResult[21]> #> 31: <ResampleResult[21]> #> 32: <ResampleResult[21]> #> 33: <ResampleResult[21]> #> 34: <ResampleResult[21]> #> 35: <ResampleResult[21]> #> 36: <ResampleResult[21]> #> 37: <ResampleResult[21]> #> 38: <ResampleResult[21]> #> 39: <ResampleResult[21]> #> 40: <ResampleResult[21]> #> 41: <ResampleResult[21]> #> 42: <ResampleResult[21]> #> 43: <ResampleResult[21]> #> 44: <ResampleResult[21]> #> 45: <ResampleResult[21]> #> 46: <ResampleResult[21]> #> 47: <ResampleResult[21]> #> 48: <ResampleResult[21]> #> 49: <ResampleResult[21]> #> 50: <ResampleResult[21]> #> 51: <ResampleResult[21]> #> 52: <ResampleResult[21]> #> 53: <ResampleResult[21]> #> 54: <ResampleResult[21]> #> 55: <ResampleResult[21]> #> 56: <ResampleResult[21]> #> 57: <ResampleResult[21]> #> 58: <ResampleResult[21]> #> 59: <ResampleResult[21]> #> 60: <ResampleResult[21]> #> 61: <ResampleResult[21]> #> 62: <ResampleResult[21]> #> 63: <ResampleResult[21]> #> 64: <ResampleResult[21]> #> 65: <ResampleResult[21]> #> 66: <ResampleResult[21]> #> 67: <ResampleResult[21]> #> 68: <ResampleResult[21]> #> 69: <ResampleResult[21]> #>          resample_result  # subset the task and fit the final model task$select(instance$result_feature_set) learner$train(task) # }"},{"path":"https://mlr3fselect.mlr-org.com/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. bbotk mlr_terminators, trm, trms mlr3misc clbk, clbks, mlr_callbacks","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-development-version","dir":"Changelog","previous_headings":"","what":"mlr3fselect (development version)","title":"mlr3fselect (development version)","text":"BREAKING CHANGE: method parameter fselect(), fselect_nested() auto_fselector() renamed fselector. FSelector objects accepted now. Arguments tuner passed ... anymore. BREAKING CHANGE: fselect parameter FSelector moved first position achieve consistency functions. docs: Update resources sections. docs: Add list default measures.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-0100","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.10.0","title":"mlr3fselect 0.10.0","text":"CRAN release: 2023-02-21 feat: Add callback mlr3fselect.svm_rfe run recursive feature elimination linear support vector machines. refactor: importance scores FSelectorRFE now aggregated rank instead averaging . feat: Add FSelectorRFECV optimizer run recursive feature elimination cross-validation. refactor: FSelectorRFE works without store_models = TRUE now. feat: .data.table.ArchiveFSelect() function additionally returns character vector selected features row. refactor: Add callbacks argument fsi() function.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-091","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.9.1","title":"mlr3fselect 0.9.1","text":"CRAN release: 2023-01-26 refactor: Remove internal use mlr3pipelines. fix: Feature selection measures require importance oob error works now.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-090","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.9.0","title":"mlr3fselect 0.9.0","text":"CRAN release: 2022-12-21 fix: Add genalg required packages FSelectorGeneticSearch. feat: Add new callback backups benchmark result disk batch. feat: Create custom callbacks callback_fselect() function.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-080","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.8.0","title":"mlr3fselect 0.8.0","text":"CRAN release: 2022-11-16 refactor: FSelectorRFE throws error learner support $importance() method. refactor: AutoFSelector stores instance benchmark result store_models = TRUE. refactor: AutoFSelector stores instance store_benchmark_result = TRUE. feat: Add missing parameters AutoFSelector auto_fselect(). feat: Add fsi() function create FSelectInstanceSingleCrit FSelectInstanceMultiCrit. refactor: Remove unnest option .data.table.ArchiveFSelect() function.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-072","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.7.2","title":"mlr3fselect 0.7.2","text":"CRAN release: 2022-08-25 docs: Re-generate rd files valid html.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-071","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.7.1","title":"mlr3fselect 0.7.1","text":"CRAN release: 2022-05-03 feat: FSelector objects field $id now.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-070","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.7.0","title":"mlr3fselect 0.7.0","text":"CRAN release: 2022-04-08 feat: Allow pass FSelector objects method fselect() auto_fselector(). feat: Added $label FSelectors. docs: New examples fselect() function. feat: $help() method opens manual page FSelector. feat: Added .data.table.DictionaryFSelector function. feat: Added min_features parameter FSelectorSequential.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-061","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.6.1","title":"mlr3fselect 0.6.1","text":"CRAN release: 2022-01-20 Add store_models flag fselect(). Remove store_x_domain flag.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-060","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.6.0","title":"mlr3fselect 0.6.0","text":"CRAN release: 2021-09-13 Adds AutoFSelector$base_learner() method extract base learner nested learner objects. Adds fselect(), auto_fselector() fselect_nested() sugar functions. Adds extract_inner_fselect_results() extract_inner_fselect_archives() helper function extract inner feature selection results archives.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-051","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.5.1","title":"mlr3fselect 0.5.1","text":"CRAN release: 2021-03-09 Remove x_domain column archive.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-050","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.5.0","title":"mlr3fselect 0.5.0","text":"CRAN release: 2021-01-24 FSelectorRFE stores importance values evaluated feature set archive. ArchiveFSelect$data public field now.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-041","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.4.1","title":"mlr3fselect 0.4.1","text":"CRAN release: 2020-10-30 Fix bug AutoFSelector$predict()","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-040","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.4.0","title":"mlr3fselect 0.4.0","text":"CRAN release: 2020-10-22 Compact -memory representation R6 objects save space saving mlr3 objects via saveRDS(), serialize() etc. FSelectorRFE supports fraction features retain iteration (feature_fraction), number features remove iteration (feature_number) vector number features retain iteration (subset_sizes). AutoFSelect renamed AutoFSelector. retrieve inner feature selection results nested resampling, .data.table(rr)$learner[[1]]$fselect_result must used now. Option control store_benchmark_result, store_models check_values AutoFSelector. store_fselect_instance must set parameter initialization. Adds FSelectorGeneticSearch. Fixes check_values flag FSelectInstanceSingleCrit FSelectInstanceMultiCrit. Removed dependency orphaned package bibtex. PipeOpSelect internally used task subsetting.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-030","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.3.0","title":"mlr3fselect 0.3.0","text":"CRAN release: 2020-09-22 Archive ArchiveFSelect now stores benchmark result $benchmark_result. change removed resample results archive can still accessed via benchmark result.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-021","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.2.1","title":"mlr3fselect 0.2.1","text":"CRAN release: 2020-09-10 Warning message external package feature selection installed.","code":""},{"path":"https://mlr3fselect.mlr-org.com/dev/news/index.html","id":"mlr3fselect-020","dir":"Changelog","previous_headings":"","what":"mlr3fselect 0.2.0","title":"mlr3fselect 0.2.0","text":"CRAN release: 2020-08-23 Initial CRAN release.","code":""}]
