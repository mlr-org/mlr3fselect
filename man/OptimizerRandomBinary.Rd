% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OptimizerRandomBinary.R
\name{OptimizerRandomBinary}
\alias{OptimizerRandomBinary}
\title{Feature Selection via Random Search}
\description{
\code{OptimizerRandomBinary} class that implements a random feature selection.
Feature subsets are randomly drawn.
}
\section{Dictionary}{

This \link[bbotk:Optimizer]{bbotk::Optimizer} can be instantiated via the \link[mlr3misc:Dictionary]{dictionary}
\link{mlr_optimizers} or with the associated sugar function \code{\link[=opt]{opt()}}:\preformatted{mlr_optimizers$get("random")
opt("random")
}
}

\section{Parameters}{

\describe{
\item{\code{max_features}}{\code{integer(1)}\cr
Maximum number of features. By default, number of features in \link[mlr3:Task]{mlr3::Task}.}
\item{\code{batch_size}}{\code{integer(1)}\cr
Maximum number of feature sets to try in a batch.}
\item{\code{prob}}{\code{double(1)}\cr
Probability of choosing a feature.}
}

In order to support general termination criteria and parallelization, feature
sets are evaluated in a batch-fashion of size \code{batch_size}. Larger batches
mean more is parallelized, smaller batches imply a more fine-grained checking
of termination criteria.
}

\examples{
library(mlr3)

terminator = term("evals", n_evals = 10)
instance = FSelectInstance$new(
  task = tsk("iris"),
  learner = lrn("classif.rpart"),
  resampling = rsmp("holdout"),
  measure = msr("classif.ce"),
  terminator = terminator
)

fs = opt("random")
fs$optimize(instance)
instance$result
instance$archive$data
}
\section{Super class}{
\code{\link[bbotk:Optimizer]{bbotk::Optimizer}} -> \code{OptimizerRandomBinary}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{OptimizerRandomBinary$new()}}
\item \href{#method-clone}{\code{OptimizerRandomBinary$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="bbotk" data-topic="Optimizer" data-id="format">}\href{../../bbotk/html/Optimizer.html#method-format}{\code{bbotk::Optimizer$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="bbotk" data-topic="Optimizer" data-id="optimize">}\href{../../bbotk/html/Optimizer.html#method-optimize}{\code{bbotk::Optimizer$optimize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="bbotk" data-topic="Optimizer" data-id="print">}\href{../../bbotk/html/Optimizer.html#method-print}{\code{bbotk::Optimizer$print()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OptimizerRandomBinary$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OptimizerRandomBinary$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
